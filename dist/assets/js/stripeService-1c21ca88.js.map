{"version":3,"file":"stripeService-1c21ca88.js","sources":["../../../src/services/stripeService.ts"],"sourcesContent":["import { supabase } from './supabase';\n\ninterface CheckoutSessionResponse {\n  url?: string;\n  error?: string;\n}\n\nexport const createCheckoutSession = async (priceId: string): Promise<CheckoutSessionResponse> => {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      return { error: 'User not authenticated' };\n    }\n\n    const { data, error } = await supabase.functions.invoke('create-checkout-session', {\n      body: {\n        priceId,\n        userId: user.id,\n        email: user.email,\n        successUrl: `${window.location.origin}/checkout-result?success=true`,\n        cancelUrl: `${window.location.origin}/checkout-result?canceled=true`\n      }\n    });\n\n    if (error) {\n      return { error: error.message || 'Failed to create checkout session' };\n    }\n\n    return { url: data?.url };\n  } catch (error) {\n    return { error: 'Failed to create checkout session' };\n  }\n};\n\nexport const createCustomerPortalSession = async (): Promise<CheckoutSessionResponse> => {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      return { error: 'User not authenticated' };\n    }\n\n    const { data, error } = await supabase.functions.invoke('create-portal-session', {\n      body: {\n        userId: user.id,\n        returnUrl: `${window.location.origin}/studio`\n      }\n    });\n\n    if (error) {\n      return { error: error.message || 'Failed to create portal session' };\n    }\n\n    return { url: data?.url };\n  } catch (error) {\n    return { error: 'Failed to create portal session' };\n  }\n};\n\nexport const cancelSubscription = async (): Promise<{ success: boolean; error?: string }> => {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      return { success: false, error: 'User not authenticated' };\n    }\n\n    const { data, error } = await supabase.functions.invoke('cancel-subscription', {\n      body: {\n        userId: user.id\n      }\n    });\n\n    if (error) {\n      return { success: false, error: error.message || 'Failed to cancel subscription' };\n    }\n\n    return { success: true };\n  } catch (error) {\n    return { success: false, error: 'Failed to cancel subscription' };\n  }\n}; "],"names":["createCheckoutSession","async","priceId","data","user","supabase","auth","getUser","error","functions","invoke","body","userId","id","email","successUrl","window","location","origin","cancelUrl","message","url","createCustomerPortalSession","returnUrl","cancelSubscription","success"],"mappings":"wCAOa,MAAAA,EAAwBC,MAAOC,IACtC,IACI,MAAEC,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAE/C,IAAKH,EACI,MAAA,CAAEI,MAAO,0BAGZ,MAAAL,KAAEA,QAAMK,SAAgBH,EAASI,UAAUC,OAAO,0BAA2B,CACjFC,KAAM,CACJT,UACAU,OAAQR,EAAKS,GACbC,MAAOV,EAAKU,MACZC,WAAY,GAAGC,OAAOC,SAASC,sCAC/BC,UAAW,GAAGH,OAAOC,SAASC,0CAIlC,OAAIV,EACK,CAAEA,MAAOA,EAAMY,SAAW,qCAG5B,CAAEC,IAAKlB,GAAMkB,WACbb,GACA,MAAA,CAAEA,MAAO,oCAClB,GAGWc,EAA8BrB,UACrC,IACI,MAAEE,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAE/C,IAAKH,EACI,MAAA,CAAEI,MAAO,0BAGZ,MAAAL,KAAEA,QAAMK,SAAgBH,EAASI,UAAUC,OAAO,wBAAyB,CAC/EC,KAAM,CACJC,OAAQR,EAAKS,GACbU,UAAW,GAAGP,OAAOC,SAASC,mBAIlC,OAAIV,EACK,CAAEA,MAAOA,EAAMY,SAAW,mCAG5B,CAAEC,IAAKlB,GAAMkB,WACbb,GACA,MAAA,CAAEA,MAAO,kCAClB,GAGWgB,EAAqBvB,UAC5B,IACI,MAAEE,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAE/C,IAAKH,EACH,MAAO,CAAEqB,SAAS,EAAOjB,MAAO,0BAG5B,MAAAL,KAAEA,QAAMK,SAAgBH,EAASI,UAAUC,OAAO,sBAAuB,CAC7EC,KAAM,CACJC,OAAQR,EAAKS,MAIjB,OAAIL,EACK,CAAEiB,SAAS,EAAOjB,MAAOA,EAAMY,SAAW,iCAG5C,CAAEK,SAAS,SACXjB,GACP,MAAO,CAAEiB,SAAS,EAAOjB,MAAO,gCAClC"}