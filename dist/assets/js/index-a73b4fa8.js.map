{"version":3,"mappings":"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","names":["m","require$$0","client","createRoot","hydrateRoot","supabase","createClient","authService","signUp","email","password","data","error","auth","success","message","user","signIn","signInWithPassword","signOut","resetPassword","resetPasswordForEmail","redirectTo","window","location","origin","updatePassword","updateUser","async","getSession","signInWithGoogle","signInWithOAuth","provider","options","FUNNEL_STAGES","name","event","required","AnalyticsService","static","events","isOnline","navigator","onLine","sessionId","userId","userTier","retryQueue","userProgress","Map","performanceMetrics","constructor","this","generateSessionId","setupOnlineOfflineHandling","setupGlobalErrorHandling","loadRetryQueue","trackPageLoadTime","getInstance","instance","resetInstance","Date","now","Math","random","toString","substr","addEventListener","processRetryQueue","trackError","Error","reason","startTime","performance","loadTime","trackMetric","setUser","track","properties","eventData","timestamp","version","platform","push","trackFunnelProgress","sendEvent","storeForRetry","length","slice","stage","find","s","stageIndex","findIndex","has","set","Set","get","add","previousStages","map","completedStages","Array","from","checkFunnelCompletion","currentStage","userStages","filter","every","completionTime","calculateFunnelTime","value","metric","context","stack","url","href","userAgent","trackFeatureError","feature","trackFeatureResponseTime","responseTime","response","fetch","method","headers","body","JSON","stringify","ok","status","saveRetryQueue","localStorage","setItem","stored","getItem","parse","eventsToRetry","getEvents","getSessionId","getRetryQueueLength","getFunnelConversionRate","rates","totalUsers","size","forEach","usersAtStage","values","stages","getAverageMetric","reduce","sum","getUserProgress","setUserProgress","progress","clearEvents","analytics","trackEvent","INTENT_CACHE_KEY","DEMO_SESSION_KEY","IntentManagementService","cacheIntent","action","existing","getIntentCache","cache","actions","a","id","sort","b","priorityOrder","high","medium","low","priority","lastUpdated","validActions","expiresAt","updateIntentCache","clearIntentCache","removeItem","updateUserTier","newTier","UploadActionExecutor","execute","setSidePanelMode","file","canExecute","getSuccessMessage","mode","SaveSessionActionExecutor","handleSaveSession","AddLibraryTrackActionExecutor","trackId","EditCuesActionExecutor","setCueEditingMode","cueIndex","enabled","RecordActionExecutor","setRecordingMode","DownloadActionExecutor","setDownloadMode","showSuccessMessage","showErrorMessage","PostSignupActionService","executors","registerExecutors","setMessageFunctions","successFn","errorFn","executePendingActions","intentCache","executableActions","executor","type","actionType","removeActionFromCache","actionId","DemoSessionManager","saveDemoState","state","sessionData","getDemoState","oneHour","clearDemoState","restoreDemoState","currentTrack","loadTrack","playbackPosition","setPlaybackPosition","setPlaybackMode","volume","setVolume","tempo","setTempo","cuePoints","setCuePoints","loopRegions","setLoopRegions","position","PostSignupFlowHandler","handleSignupSuccess","trigger","restored","hasRestoredSession","actionsExecuted","sessionRestored","totalTime","handleTierUpgrade","pro","free","previousTier","AuthContext","createContext","loading","AuthProvider","children","useState","setLoading","useEffect","then","session","subscription","onAuthStateChange","handler","user_metadata","tier_changed","new_tier","unsubscribe","jsx","Provider","result","useAuth","useContext","AudioContextInstance","AudioProvider","audioContext","setAudioContext","initializeAudio","useCallback","newContext","AudioContext","webkitAudioContext","sampleRate","latencyHint","resume","resumeError","resumeAudioContext","useAudioContext","SidePanelContext","useSidePanel","SidePanelProvider","isOpen","setIsOpen","toggleSidePanel","openSidePanel","closeSidePanel","DatabaseService","getCurrentUser","getUser","select","eq","single","updates","update","createUpload","upload","insert","getUserUploads","order","ascending","deleteUpload","uploadId","delete","createSession","getUserSessions","updateSession","deleteSession","createRecording","recording","getSessionRecordings","getUserRecordings","deleteRecording","recordingId","getSessionWithData","uploads","recordings","Promise","all","RecordingContextInstance","RecordingProvider","isRecordingPerformance","setIsRecordingPerformance","currentPerformance","setCurrentPerformance","performances","setPerformances","saved","performanceStartTimeRef","useRef","isRecordingAudio","setIsRecordingAudio","currentAudioRecording","setCurrentAudioRecording","audioRecordings","setAudioRecordings","savedSessions","setSavedSessions","mediaRecorderRef","audioStreamRef","performanceEventsRef","performanceTracksRef","audioCheckIntervalRef","recordingDestinationRef","startPerformanceRecording","appAudioContext","performanceId","current","alert","destination","createMediaStreamDestination","mimeType","MediaRecorder","isTypeSupported","mediaRecorder","stream","onerror","chunks","ondataavailable","onstop","originalBlob","Blob","finalAudioBlob","arrayBuffer","audioBuffer","decodeAudioData","wavBlob","numberOfChannels","buffer","ArrayBuffer","view","DataView","writeString","offset","string","i","setUint8","charCodeAt","setUint32","setUint16","channel","sample","max","min","getChannelData","setInt16","convertToWav","endTime","duration","completedPerformance","tracks","audioBlob","prev","existingUser","userError","code","createUserError","access_tier","count","recordingCount","countError","currentRecordingCount","userData","userTierError","Infinity","recordingRecord","user_id","session_id","recording_url","notes","p","databaseId","dispatchEvent","CustomEvent","detail","clearTimeout","newPerformance","start","stopPerformanceRecording","stop","getTracks","addRecordingEvent","newEvent","includes","startAudioRecording","countInBeats","stopAudioRecording","saveCurrentState","studioState","currentTime","stateSession","sessionCount","currentSessionCount","isValidUUID","str","test","validTrackIds","dbSession","session_name","toLocaleString","track_ids","cuepoints","flatMap","loop_regions","loopStart","end","loopEnd","region","clearAll","exportPerformance","performanceData","dataStr","dataBlob","URL","createObjectURL","link","document","createElement","download","appendChild","click","removeChild","revokeObjectURL","audioUrl","audioLink","extension","exportSession","exportAudioRecording","r","deletePerformance","deleteAudioRecording","getRecordingDestination","useRecording","LibraryService","getLibraryTracks","query","rpc","transformDatabaseTracks","getTracksByGenre","genre","getAvailableGenres","getTrackById","getCurrentRotationInfo","info","weekNumber","current_week","trackCount","current_track_count","nextRotationDate","next_rotation_date","daysUntilRotation","days_until_rotation","dbTracks","dbTrack","track_id","artist","bpm","key","getLibraryTrackUrl","tags","isProOnly","is_pro_only","previewUrl","preview_url","fileType","storage","getPublicUrl","publicUrl","fetchAudioFile","fileUrl","statusText","blob","fileName","split","pop","File","getTrackCount","DemoContext","DemoProvider","currentDemoTrack","setCurrentDemoTrack","isLoading","setIsLoading","availableDemoTracks","setAvailableDemoTracks","isDemoMode","isAuthenticated","trackDemoEvent","loadRandomDemoTrack","pool","t","selected","lastTrack","floor","selectRandom","mapped","e","preload","demoTracks","useDemo","Modal","onClose","className","handleEscape","style","overflow","removeEventListener","jsxs","onClick","stopPropagation","GUEST_FEATURES","canUpload","canSaveSession","canRecord","canDownload","canEditCues","canEditLoops","canBrowseLibrary","canAccessProTracks","FREE_FEATURES","PRO_FEATURES","GUEST_LIMITS","maxUploads","maxSessions","maxRecordings","maxLibraryTracks","FREE_LIMITS","PRO_LIMITS","useUserTier","accessTier","setAccessTier","setError","fetchError","err","fetchUserTier","tier","features","limits","isGuest","isFree","isPro","useMessageSystem","messages","setMessages","showMessage","newMessage","setTimeout","removeMessage","msg","showInfoMessage","usePostSignupActions","isProcessing","setIsProcessing","intentService","fullAction","INTENT_EXPIRY_HOURS","GoogleSignInButton","onSuccess","externalLoading","internalLoading","setInternalLoading","disabled","Fragment","viewBox","fill","d","SignupModal","setEmail","setPassword","getTriggerMessage","upgradeRequired","onSubmit","preventDefault","placeholder","onChange","target","useSignupModal","modalState","setModalState","showSignupModal","closeSignupModal","MessageDisplay","onRemove","getMessageStyles","getIcon","GlobalModalManager","handleShowSignupModal","handlePostSignupAction","SuccessMessage","isVisible","setIsVisible","timer","icon","title","index","variant","label","SuccessMessageManager","successMessages","setSuccessMessages","newSuccessMessages","ErrorMonitor","errors","maxErrors","setupGlobalHandlers","captureError","filename","lineno","colno","promise","__REACT_ERROR_BOUNDARY__","errorInfo","componentStack","additionalContext","errorEvent","generateErrorId","buildErrorContext","severity","determineSeverity","fingerprint","generateFingerprint","storeError","captureCustomError","getCurrentUserId","getCurrentUserTier","currentRoute","pathname","featureGates","getActiveFeatureGates","screenSize","screen","width","height","viewportSize","innerWidth","innerHeight","memoryUsage","memory","usedJSHeapSize","networkStatus","customContext","hashString","hash","abs","getErrors","clearErrors","getErrorRate","setAnalyticsService","ErrorBoundary","React","Component","props","super","hasError","getDerivedStateFromError","componentDidCatch","resetError","setState","render","fallback","FallbackComponent","reload","PerformanceDashboard","metrics","setMetrics","setErrors","pendingEvents","setPendingEvents","setIsOnline","lastError","setLastError","loadData","EnhancedAnalyticsService","__vitePreload","import","healthStatus","getHealthStatus","RefreshCw","X","Clock","AlertTriangle","CheckCircle","toLocaleTimeString","Navbar","isSidePanelOpen","useLocation","isStudioPage","showPerformanceDashboard","setShowPerformanceDashboard","isMobileMenuOpen","setIsMobileMenuOpen","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Link","to","src","alt","Layout","Outlet","AuthForm","confirmPassword","setConfirmPassword","setMessage","htmlFor","PasswordReset","AuthPage","setMode","AuthCallback","navigate","useNavigate","searchParams","useSearchParams","hashParams","URLSearchParams","substring","accessToken","refreshToken","setSession","access_token","refresh_token","replace","resolve","errorParam","errorDescription","handleAuthCallback","Home","lazy","Studio","Pricing","module","default","CheckoutResult","Profile","LoadingSpinner","router","createBrowserRouter","path","element","Suspense","App","RouterProvider","ReactDOM","getElementById","StrictMode"],"sources":["../../../node_modules/react-dom/client.js","../../../src/services/supabase.ts","../../../src/auth/authService.ts","../../../src/services/analyticsService.ts","../../../src/types/postSignup.ts","../../../src/services/intentManagementService.ts","../../../src/services/postSignupActionService.ts","../../../src/services/demoSessionManager.ts","../../../src/services/postSignupFlowHandler.ts","../../../src/context/AuthContext.tsx","../../../src/context/AudioContext.tsx","../../../src/context/SidePanelContext.tsx","../../../src/services/databaseService.ts","../../../src/context/RecordingContext.tsx","../../../src/services/libraryService.ts","../../../src/context/DemoContext.tsx","../../../src/components/Modal.tsx","../../../src/hooks/useUserTier.ts","../../../src/hooks/useMessageSystem.ts","../../../src/hooks/usePostSignupActions.ts","../../../src/auth/GoogleSignInButton.tsx","../../../src/components/SignupModal.tsx","../../../src/hooks/useSignupModal.ts","../../../src/components/MessageDisplay.tsx","../../../src/components/GlobalModalManager.tsx","../../../src/components/SuccessMessage.tsx","../../../src/components/SuccessMessageManager.tsx","../../../src/services/errorMonitor.ts","../../../src/components/ErrorBoundary.tsx","../../../src/components/PerformanceDashboard.tsx","../../../src/components/Navbar.tsx","../../../src/components/Layout.tsx","../../../src/auth/AuthForm.tsx","../../../src/auth/PasswordReset.tsx","../../../src/auth/AuthPage.tsx","../../../src/auth/AuthCallback.tsx","../../../src/routes/index.tsx","../../../src/App.tsx","../../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createClient } from \"@supabase/supabase-js\";\n\n// Use environment variables or fallback to development values\nconst supabaseUrl =\n  import.meta.env.VITE_SUPABASE_URL || \"https://your-project.supabase.co\";\nconst supabaseAnonKey =\n  import.meta.env.VITE_SUPABASE_ANON_KEY || \"your-anon-key\";\n\n// Only throw error in production\nif (import.meta.env.PROD && (!supabaseUrl || !supabaseAnonKey)) {\n  throw new Error(\"Missing Supabase environment variables\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n","import { supabase } from '../services/supabase';\nimport { User } from '@supabase/supabase-js';\n\nexport interface AuthResponse {\n  success: boolean;\n  user?: User;\n  error?: string;\n}\n\nexport const authService = {\n  // Sign up with email and password\n  async signUp(email: string, password: string): Promise<AuthResponse> {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n\n      if (error) {\n        return {\n          success: false,\n          error: error.message,\n        };\n      }\n\n      return {\n        success: true,\n        user: data.user || undefined,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An unexpected error occurred during sign up',\n      };\n    }\n  },\n\n  // Sign in with email and password\n  async signIn(email: string, password: string): Promise<AuthResponse> {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) {\n        return {\n          success: false,\n          error: error.message,\n        };\n      }\n\n      return {\n        success: true,\n        user: data.user || undefined,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An unexpected error occurred during sign in',\n      };\n    }\n  },\n\n  // Sign out\n  async signOut(): Promise<AuthResponse> {\n    try {\n      const { error } = await supabase.auth.signOut();\n\n      if (error) {\n        return {\n          success: false,\n          error: error.message,\n        };\n      }\n\n      return {\n        success: true,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An unexpected error occurred during sign out',\n      };\n    }\n  },\n\n  // Reset password\n  async resetPassword(email: string): Promise<AuthResponse> {\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n\n      if (error) {\n        return {\n          success: false,\n          error: error.message,\n        };\n      }\n\n      return {\n        success: true,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An unexpected error occurred during password reset',\n      };\n    }\n  },\n\n  // Update password\n  async updatePassword(password: string): Promise<AuthResponse> {\n    try {\n      const { data, error } = await supabase.auth.updateUser({\n        password,\n      });\n\n      if (error) {\n        return {\n          success: false,\n          error: error.message,\n        };\n      }\n\n      return {\n        success: true,\n        user: data.user || undefined,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An unexpected error occurred while updating password',\n      };\n    }\n  },\n\n  // Get current session\n  async getSession() {\n    return await supabase.auth.getSession();\n  },\n\n  // Sign in with Google\n  async signInWithGoogle(): Promise<AuthResponse> {\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`\n        }\n      });\n\n      if (error) {\n        return {\n          success: false,\n          error: error.message,\n        };\n      }\n\n      // OAuth redirects to Google, so we return success to indicate the flow started\n      return {\n        success: true,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'An unexpected error occurred during Google sign in',\n      };\n    }\n  },\n}; ","// Analytics service for tracking user interactions and conversion events\n\nexport interface AnalyticsEvent {\n  event: string;\n  userId?: string;\n  sessionId: string;\n  timestamp: number;\n  properties: Record<string, any>;\n  userTier: 'guest' | 'free' | 'pro';\n  version: string;\n  platform: 'web' | 'mobile';\n}\n\nexport interface TrackingEvents {\n  // Demo engagement\n  'demo_track_loaded': { trackId: string; genre: string; bpm: number };\n  'demo_mode_switched': { fromMode: string; toMode: string };\n  'demo_cue_triggered': { cueIndex: number; trackId: string };\n  'demo_next_track': { fromTrackId: string; toTrackId: string };\n  'demo_session_started': { timestamp: number };\n  'demo_session_ended': { duration: number; actions: string[] };\n  \n  // Feature gate interactions\n  'feature_gate_clicked': { feature: string; userTier: string; gateType: string };\n  'tooltip_shown': { feature: string; tooltipText?: string; userTier: string };\n  'mobile_gate_tapped': { feature: string; screenSize: 'mobile' | 'tablet'; userTier: string };\n  'signup_modal_shown': { trigger: string; userTier: string };\n  'signup_modal_dismissed': { trigger: string; userTier: string };\n  \n  // Conversion events\n  'signup_completed': { method: 'email' | 'google'; trigger?: string; upgradeRequired: boolean };\n  'signup_error': { trigger: string; error: string };\n  'post_signup_action': { action: string; userTier: string };\n  'upgrade_clicked': { feature: string; currentTier: string };\n  'upgrade_completed': { plan: string; amount: number };\n  \n  // Library interactions\n  'library_panel_opened': { userTier: string };\n  'library_track_previewed': { trackId: string; genre: string; bpm: number; userTier: string };\n  'library_track_added': { trackId: string; genre: string; userTier: string };\n  'library_search_performed': { searchTerm: string; resultsCount: number; userTier: string };\n  'library_genre_filtered': { genre: string; resultsCount: number; userTier: string };\n  \n  // Studio actions\n  'track_uploaded': { fileName: string; fileSize: number; fileType: string; userTier: string };\n  'session_saved': { sessionName?: string; userTier: string; isModified: boolean };\n  'recording_started': { userTier: string };\n  'recording_stopped': { userTier: string };\n  'recording_downloaded': { fileName?: string; format: string; userTier: string };\n  \n  // Performance metrics\n  'demo_load_time': { loadTime: number; userTier: string };\n  'feature_gate_response_time': { feature: string; responseTime: number; userTier: string };\n  'signup_flow_completion_time': { duration: number; method: string };\n  'performance_metric': { metric: string; value: number; userTier: string };\n  \n  // Error tracking\n  'error_occurred': { error: string; context: string; userTier: string; stack?: string; url?: string; userAgent?: string };\n  'feature_error': { feature: string; error: string; userTier: string };\n  \n  // Funnel tracking\n  'funnel_progress': { stage: string; stageIndex: number; properties: any; previousStages: string[]; completedStages: string[] };\n  'funnel_completed': { userId: string; completedStages: string[]; completionTime: number };\n}\n\n// Funnel stage definition\nexport interface FunnelStage {\n  name: string;\n  event: string;\n  filters?: Record<string, any>;\n  required?: boolean;\n}\n\nexport const FUNNEL_STAGES: FunnelStage[] = [\n  { name: 'Demo Started', event: 'demo_track_loaded', required: true },\n  { name: 'Feature Interaction', event: 'demo_mode_switched' },\n  { name: 'Gate Clicked', event: 'feature_gate_clicked', required: true },\n  { name: 'Signup Modal Shown', event: 'signup_modal_shown', required: true },\n  { name: 'Signup Completed', event: 'signup_completed', required: true },\n  { name: 'Upgrade Clicked', event: 'upgrade_clicked' },\n  { name: 'Upgrade Completed', event: 'upgrade_completed', required: true }\n];\n\nexport class AnalyticsService {\n  private static instance: AnalyticsService;\n  private events: AnalyticsEvent[] = [];\n  private isOnline: boolean = navigator.onLine;\n  private sessionId: string;\n  private userId?: string;\n  private userTier: string = 'guest';\n  private retryQueue: AnalyticsEvent[] = [];\n  private userProgress: Map<string, Set<string>> = new Map();\n  private performanceMetrics: Map<string, number[]> = new Map();\n  \n  private constructor() {\n    this.sessionId = this.generateSessionId();\n    this.setupOnlineOfflineHandling();\n    this.setupGlobalErrorHandling();\n    this.loadRetryQueue();\n    this.trackPageLoadTime();\n  }\n  \n  static getInstance(): AnalyticsService {\n    if (!AnalyticsService.instance) {\n      AnalyticsService.instance = new AnalyticsService();\n    }\n    return AnalyticsService.instance;\n  }\n  \n  // For testing purposes\n  static resetInstance() {\n    AnalyticsService.instance = undefined as any;\n  }\n  \n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n  \n  private setupOnlineOfflineHandling() {\n    // Update isOnline to current state\n    this.isOnline = navigator.onLine;\n    \n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      this.processRetryQueue();\n    });\n    \n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n    });\n  }\n  \n  private setupGlobalErrorHandling() {\n    window.addEventListener('error', (event) => {\n      this.trackError(event.error, 'global_error');\n    });\n    \n    window.addEventListener('unhandledrejection', (event) => {\n      this.trackError(new Error(event.reason), 'unhandled_promise');\n    });\n  }\n  \n  private trackPageLoadTime() {\n    const startTime = performance.now();\n    \n    window.addEventListener('load', () => {\n      const loadTime = performance.now() - startTime;\n      this.trackMetric('page_load_time', loadTime);\n    });\n  }\n  \n  setUser(userId: string, userTier: string) {\n    this.userId = userId;\n    this.userTier = userTier;\n  }\n  \n  track<K extends keyof TrackingEvents>(\n    event: K, \n    properties: TrackingEvents[K]\n  ) {\n    const eventData: AnalyticsEvent = {\n      event,\n      userId: this.userId,\n      sessionId: this.sessionId,\n      timestamp: Date.now(),\n      properties,\n      userTier: this.userTier as 'guest' | 'free' | 'pro',\n      version: '1.0.0',\n      platform: 'web'\n    };\n    \n    // Store locally\n    this.events.push(eventData);\n    \n    // Track funnel progress for relevant events\n    this.trackFunnelProgress(event, properties);\n    \n    // Send immediately if online\n    if (this.isOnline) {\n      this.sendEvent(eventData);\n    } else {\n      // Store for retry\n      this.storeForRetry(eventData);\n    }\n    \n    // Keep only last 100 events in memory\n    if (this.events.length > 100) {\n      this.events = this.events.slice(-100);\n    }\n    \n    // Log for development\n    console.log(`Analytics: ${event}`, eventData);\n  }\n  \n  private trackFunnelProgress(event: string, properties: any) {\n    const stage = FUNNEL_STAGES.find(s => s.event === event);\n    if (!stage) return;\n    \n    const stageIndex = FUNNEL_STAGES.findIndex(s => s.name === stage.name);\n    const userId = this.userId || 'anonymous';\n    \n    // Track user progress\n    if (!this.userProgress.has(userId)) {\n      this.userProgress.set(userId, new Set());\n    }\n    \n    this.userProgress.get(userId)!.add(stage.name);\n    \n    // Track funnel progress as a separate event\n    this.track('funnel_progress', {\n      stage: stage.name,\n      stageIndex,\n      properties,\n      previousStages: FUNNEL_STAGES.slice(0, stageIndex).map(s => s.name),\n      completedStages: Array.from(this.userProgress.get(userId) || [])\n    });\n    \n    // Check if user completed the funnel\n    this.checkFunnelCompletion(userId, stage.name);\n  }\n  \n\n  \n  private checkFunnelCompletion(userId: string, currentStage: string) {\n    const userStages = this.userProgress.get(userId);\n    if (!userStages) return;\n    \n    const requiredStages = FUNNEL_STAGES\n      .filter(stage => stage.required)\n      .map(stage => stage.name);\n    \n    const hasCompletedRequired = requiredStages.every(stage => \n      userStages.has(stage)\n    );\n    \n    if (hasCompletedRequired) {\n      // Track funnel completion as a separate event\n      this.track('funnel_completed', {\n        userId,\n        completedStages: Array.from(userStages),\n        completionTime: this.calculateFunnelTime(userId)\n      });\n    }\n  }\n  \n  private calculateFunnelTime(userId: string): number {\n    // Implementation would track timestamps for each stage\n    // and calculate total time from first to last stage\n    // For now, return a placeholder\n    return 0;\n  }\n  \n  trackMetric(name: string, value: number) {\n    if (!this.performanceMetrics.has(name)) {\n      this.performanceMetrics.set(name, []);\n    }\n    \n    this.performanceMetrics.get(name)!.push(value);\n    \n    // Keep only last 100 values\n    if (this.performanceMetrics.get(name)!.length > 100) {\n      this.performanceMetrics.set(name, this.performanceMetrics.get(name)!.slice(-100));\n    }\n    \n    // Send to analytics\n    this.track('performance_metric', {\n      metric: name,\n      value,\n      userTier: this.userTier\n    });\n  }\n  \n  trackError(error: Error, context: string) {\n    this.track('error_occurred', {\n      error: error.message,\n      stack: error.stack,\n      context,\n      userTier: this.userTier,\n      url: window.location.href,\n      userAgent: navigator.userAgent\n    });\n  }\n  \n  trackFeatureError(feature: string, error: Error) {\n    this.track('feature_error', {\n      feature,\n      error: error.message,\n      userTier: this.userTier\n    });\n  }\n  \n  trackFeatureResponseTime(feature: string) {\n    const startTime = performance.now();\n    \n    return () => {\n      const responseTime = performance.now() - startTime;\n      this.track('feature_gate_response_time', {\n        feature,\n        responseTime,\n        userTier: this.userTier\n      });\n    };\n  }\n  \n  private async sendEvent(eventData: AnalyticsEvent) {\n    try {\n      // TODO: Replace with actual analytics endpoint\n      const response = await fetch('/api/analytics', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(eventData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Analytics request failed: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Failed to send analytics event:', error);\n      this.storeForRetry(eventData);\n    }\n  }\n  \n  private storeForRetry(eventData: AnalyticsEvent) {\n    this.retryQueue.push(eventData);\n    this.saveRetryQueue();\n  }\n  \n  private saveRetryQueue() {\n    try {\n      localStorage.setItem('analytics_retry_queue', JSON.stringify(this.retryQueue));\n    } catch (error) {\n      console.error('Failed to save retry queue:', error);\n    }\n  }\n  \n  private loadRetryQueue() {\n    try {\n      const stored = localStorage.getItem('analytics_retry_queue');\n      if (stored) {\n        this.retryQueue = JSON.parse(stored);\n      }\n    } catch (error) {\n      console.error('Failed to load analytics retry queue:', error);\n    }\n  }\n  \n  private async processRetryQueue() {\n    if (this.retryQueue.length === 0) return;\n    \n    const eventsToRetry = [...this.retryQueue];\n    this.retryQueue = [];\n    \n    for (const eventData of eventsToRetry) {\n      await this.sendEvent(eventData);\n    }\n    \n    this.saveRetryQueue();\n  }\n  \n  getEvents(): AnalyticsEvent[] {\n    return [...this.events];\n  }\n  \n  getSessionId(): string {\n    return this.sessionId;\n  }\n  \n  getRetryQueueLength(): number {\n    return this.retryQueue.length;\n  }\n  \n  getFunnelConversionRate(): Record<string, number> {\n    const rates: Record<string, number> = {};\n    const totalUsers = this.userProgress.size;\n    \n    FUNNEL_STAGES.forEach((stage) => {\n      const usersAtStage = Array.from(this.userProgress.values())\n        .filter(stages => stages.has(stage.name)).length;\n      \n      rates[stage.name] = totalUsers > 0 ? (usersAtStage / totalUsers) * 100 : 0;\n    });\n    \n    return rates;\n  }\n  \n  getAverageMetric(name: string): number {\n    const values = this.performanceMetrics.get(name);\n    if (!values || values.length === 0) return 0;\n    \n    return values.reduce((sum, value) => sum + value, 0) / values.length;\n  }\n  \n  // For testing purposes\n  getUserProgress(): Map<string, Set<string>> {\n    return this.userProgress;\n  }\n  \n  // For testing purposes\n  setUserProgress(progress: Map<string, Set<string>>) {\n    this.userProgress = progress;\n  }\n  \n  clearEvents() {\n    this.events = [];\n  }\n}\n\n// Global analytics instance\nexport const analytics = AnalyticsService.getInstance();\n\n// Convenience function for tracking events\nexport const trackEvent = <K extends keyof TrackingEvents>(\n  event: K, \n  properties: TrackingEvents[K]\n) => {\n  analytics.track(event, properties);\n};\n\n// Convenience function for tracking errors\nexport const trackError = (error: Error, context: string) => {\n  analytics.trackError(error, context);\n};\n\n// Convenience function for tracking feature errors\nexport const trackFeatureError = (feature: string, error: Error) => {\n  analytics.trackFeatureError(feature, error);\n};\n\n// Convenience function for tracking metrics\nexport const trackMetric = (name: string, value: number) => {\n  analytics.trackMetric(name, value);\n}; ","// Post-signup types and interfaces for PRD 09\n\nexport interface PostSignupAction {\n  id: string;\n  type: 'upload' | 'save_session' | 'add_library_track' | 'edit_cues' | 'record' | 'download';\n  timestamp: number;\n  context: Record<string, any>;\n  priority: 'high' | 'medium' | 'low';\n  expiresAt?: number;\n}\n\nexport interface IntentCache {\n  actions: PostSignupAction[];\n  sessionId: string;\n  lastUpdated: number;\n  userTier: string;\n}\n\nexport interface DemoSessionState {\n  currentTrack: any | null;\n  playbackPosition: number;\n  cuePoints: any[];\n  loopRegions: any[];\n  mode: 'preview' | 'loop' | 'cue';\n  volume: number;\n  tempo: number;\n  timestamp: number;\n}\n\nexport interface SuccessMessage {\n  id: string;\n  title: string;\n  message: string;\n  icon: string;\n  duration: number;\n  actions?: SuccessMessageAction[];\n}\n\nexport interface SuccessMessageAction {\n  label: string;\n  action: () => void;\n  variant: 'primary' | 'secondary';\n}\n\nexport interface ActionExecutor {\n  execute(action: PostSignupAction): Promise<void>;\n  canExecute(action: PostSignupAction, userTier: string): boolean;\n  getSuccessMessage(action: PostSignupAction): string;\n}\n\nexport interface SignupSuccessHandler {\n  handleSignupSuccess(user: any, trigger?: string): Promise<void>;\n  handleTierUpgrade(user: any, newTier: string): Promise<void>;\n}\n\n// Constants\nexport const INTENT_CACHE_KEY = 'post_signup_intent';\nexport const INTENT_EXPIRY_HOURS = 24;\nexport const DEMO_SESSION_KEY = 'demo_session_state';\n\n// Success message configurations\nexport const SUCCESS_MESSAGES: Record<string, SuccessMessage> = {\n  signup_completed: {\n    id: 'signup_completed',\n    title: 'Welcome to Audafact!',\n    message: 'Your account has been created successfully.',\n    icon: '🎉',\n    duration: 5000,\n    actions: [\n      {\n        label: 'Start Creating',\n        action: () => {\n          // Will be set by the component\n          console.log('Start Creating action');\n        },\n        variant: 'primary'\n      }\n    ]\n  },\n  \n  session_restored: {\n    id: 'session_restored',\n    title: 'Session Restored',\n    message: 'Your previous session has been loaded.',\n    icon: '💾',\n    duration: 4000\n  },\n  \n  feature_unlocked: {\n    id: 'feature_unlocked',\n    title: 'Feature Unlocked!',\n    message: 'You now have access to this feature.',\n    icon: '🔓',\n    duration: 3000\n  },\n  \n  tier_upgraded: {\n    id: 'tier_upgraded',\n    title: 'Pro Creator Activated!',\n    message: 'Welcome to the Pro Creator tier.',\n    icon: '🚀',\n    duration: 5000,\n    actions: [\n      {\n        label: 'Explore Pro Features',\n        action: () => {\n          // Will be set by the component\n          console.log('Explore Pro Features action');\n        },\n        variant: 'primary'\n      }\n    ]\n  }\n}; ","import { PostSignupAction, IntentCache, INTENT_CACHE_KEY } from '../types/postSignup';\n\nexport class IntentManagementService {\n  private static instance: IntentManagementService;\n  \n  private constructor() {}\n  \n  static getInstance(): IntentManagementService {\n    if (!IntentManagementService.instance) {\n      IntentManagementService.instance = new IntentManagementService();\n    }\n    return IntentManagementService.instance;\n  }\n  \n  cacheIntent(action: PostSignupAction): void {\n    try {\n      const existing = this.getIntentCache();\n      const updatedActions = [\n        ...existing.actions.filter(a => a.id !== action.id),\n        action\n      ].sort((a, b) => {\n        const priorityOrder = { high: 3, medium: 2, low: 1 };\n        return priorityOrder[b.priority] - priorityOrder[a.priority];\n      });\n      \n      const cache: IntentCache = {\n        actions: updatedActions,\n        sessionId: this.getSessionId(),\n        lastUpdated: Date.now(),\n        userTier: 'guest' // Will be updated after signup\n      };\n      \n      localStorage.setItem(INTENT_CACHE_KEY, JSON.stringify(cache));\n    } catch (error) {\n      console.error('Failed to cache intent:', error);\n    }\n  }\n  \n  getIntentCache(): IntentCache {\n    try {\n      const stored = localStorage.getItem(INTENT_CACHE_KEY);\n      if (!stored) {\n        return {\n          actions: [],\n          sessionId: this.getSessionId(),\n          lastUpdated: Date.now(),\n          userTier: 'guest'\n        };\n      }\n      \n      const cache: IntentCache = JSON.parse(stored);\n      \n      // Clean expired actions\n      const now = Date.now();\n      const validActions = cache.actions.filter(action => {\n        if (!action.expiresAt) return true;\n        return now < action.expiresAt;\n      });\n      \n      if (validActions.length !== cache.actions.length) {\n        cache.actions = validActions;\n        this.updateIntentCache(cache);\n      }\n      \n      return cache;\n    } catch (error) {\n      console.error('Failed to get intent cache:', error);\n      return {\n        actions: [],\n        sessionId: this.getSessionId(),\n        lastUpdated: Date.now(),\n        userTier: 'guest'\n      };\n    }\n  }\n  \n  clearIntentCache(): void {\n    try {\n      localStorage.removeItem(INTENT_CACHE_KEY);\n    } catch (error) {\n      console.error('Failed to clear intent cache:', error);\n    }\n  }\n  \n  updateUserTier(newTier: string): void {\n    try {\n      const cache = this.getIntentCache();\n      cache.userTier = newTier;\n      cache.lastUpdated = Date.now();\n      this.updateIntentCache(cache);\n    } catch (error) {\n      console.error('Failed to update user tier:', error);\n    }\n  }\n  \n  private updateIntentCache(cache: IntentCache): void {\n    localStorage.setItem(INTENT_CACHE_KEY, JSON.stringify(cache));\n  }\n  \n  private getSessionId(): string {\n    return localStorage.getItem('session_id') || `session_${Date.now()}`;\n  }\n} ","import { PostSignupAction, ActionExecutor, INTENT_CACHE_KEY } from '../types/postSignup';\nimport { IntentManagementService } from './intentManagementService';\nimport { analytics } from './analyticsService';\n\n// Action Executor Implementations\nclass UploadActionExecutor implements ActionExecutor {\n  async execute(action: PostSignupAction): Promise<void> {\n    // Trigger upload panel\n    this.setSidePanelMode('upload');\n    \n    // If there's file context, pre-populate\n    if (action.context.file) {\n      // Handle file upload logic\n      console.log('Handling file upload with context:', action.context.file);\n    }\n  }\n  \n  canExecute(action: PostSignupAction, userTier: string): boolean {\n    return userTier !== 'guest';\n  }\n  \n  getSuccessMessage(action: PostSignupAction): string {\n    return \"🎉 Welcome! You can now upload your own tracks.\";\n  }\n  \n  private setSidePanelMode(mode: string): void {\n    // TODO: Integrate with actual side panel system\n    console.log('Setting side panel mode:', mode);\n  }\n}\n\nclass SaveSessionActionExecutor implements ActionExecutor {\n  async execute(action: PostSignupAction): Promise<void> {\n    // Trigger save session flow\n    await this.handleSaveSession();\n  }\n  \n  canExecute(action: PostSignupAction, userTier: string): boolean {\n    return userTier !== 'guest';\n  }\n  \n  getSuccessMessage(action: PostSignupAction): string {\n    return \"💾 Session saved! You can now save unlimited sessions.\";\n  }\n  \n  private async handleSaveSession(): Promise<void> {\n    // TODO: Integrate with actual save session system\n    console.log('Handling save session');\n  }\n}\n\nclass AddLibraryTrackActionExecutor implements ActionExecutor {\n  async execute(action: PostSignupAction): Promise<void> {\n    // Switch to library panel\n    this.setSidePanelMode('library');\n    \n    // If specific track context, highlight it\n    if (action.context.trackId) {\n      // Highlight the specific track\n      console.log('Highlighting track:', action.context.trackId);\n    }\n  }\n  \n  canExecute(action: PostSignupAction, userTier: string): boolean {\n    return userTier !== 'guest';\n  }\n  \n  getSuccessMessage(action: PostSignupAction): string {\n    return \"🎵 Browse our full library and add tracks to your studio!\";\n  }\n  \n  private setSidePanelMode(mode: string): void {\n    // TODO: Integrate with actual side panel system\n    console.log('Setting side panel mode:', mode);\n  }\n}\n\nclass EditCuesActionExecutor implements ActionExecutor {\n  async execute(action: PostSignupAction): Promise<void> {\n    // Enable cue editing mode\n    this.setCueEditingMode(true);\n    \n    // If specific cue context, focus on it\n    if (action.context.cueIndex !== undefined) {\n      // Focus on specific cue\n      console.log('Focusing on cue index:', action.context.cueIndex);\n    }\n  }\n  \n  canExecute(action: PostSignupAction, userTier: string): boolean {\n    return userTier !== 'guest';\n  }\n  \n  getSuccessMessage(action: PostSignupAction): string {\n    return \"🎯 You can now customize cue points and loops!\";\n  }\n  \n  private setCueEditingMode(enabled: boolean): void {\n    // TODO: Integrate with actual cue editing system\n    console.log('Setting cue editing mode:', enabled);\n  }\n}\n\nclass RecordActionExecutor implements ActionExecutor {\n  async execute(action: PostSignupAction): Promise<void> {\n    // Show recording tutorial or enable recording\n    this.setRecordingMode(true);\n  }\n  \n  canExecute(action: PostSignupAction, userTier: string): boolean {\n    return userTier === 'pro';\n  }\n  \n  getSuccessMessage(action: PostSignupAction): string {\n    return \"🎙 Start recording your performances!\";\n  }\n  \n  private setRecordingMode(enabled: boolean): void {\n    // TODO: Integrate with actual recording system\n    console.log('Setting recording mode:', enabled);\n  }\n}\n\nclass DownloadActionExecutor implements ActionExecutor {\n  async execute(action: PostSignupAction): Promise<void> {\n    // Enable download functionality\n    this.setDownloadMode(true);\n  }\n  \n  canExecute(action: PostSignupAction, userTier: string): boolean {\n    return userTier === 'pro';\n  }\n  \n  getSuccessMessage(action: PostSignupAction): string {\n    return \"📥 Download your mixes and share them!\";\n  }\n  \n  private setDownloadMode(enabled: boolean): void {\n    // TODO: Integrate with actual download system\n    console.log('Setting download mode:', enabled);\n  }\n}\n\n// Global success message function - will be set by the component\nlet showSuccessMessage: (message: string) => void = (message: string) => {\n  console.log('Success message:', message);\n};\n\nlet showErrorMessage: (message: string) => void = (message: string) => {\n  console.error('Error message:', message);\n};\n\nexport class PostSignupActionService {\n  private static instance: PostSignupActionService;\n  private executors: Map<string, ActionExecutor> = new Map();\n  \n  private constructor() {\n    this.registerExecutors();\n  }\n  \n  static getInstance(): PostSignupActionService {\n    if (!PostSignupActionService.instance) {\n      PostSignupActionService.instance = new PostSignupActionService();\n    }\n    return PostSignupActionService.instance;\n  }\n  \n  // Set message functions from the component\n  static setMessageFunctions(\n    successFn: (message: string) => void,\n    errorFn: (message: string) => void\n  ) {\n    showSuccessMessage = successFn;\n    showErrorMessage = errorFn;\n  }\n  \n  private registerExecutors(): void {\n    this.executors.set('upload', new UploadActionExecutor());\n    this.executors.set('save_session', new SaveSessionActionExecutor());\n    this.executors.set('add_library_track', new AddLibraryTrackActionExecutor());\n    this.executors.set('edit_cues', new EditCuesActionExecutor());\n    this.executors.set('record', new RecordActionExecutor());\n    this.executors.set('download', new DownloadActionExecutor());\n  }\n  \n  async executePendingActions(userTier: string = 'free'): Promise<void> {\n    const intentCache = IntentManagementService.getInstance().getIntentCache();\n    \n    // Update user tier in cache\n    IntentManagementService.getInstance().updateUserTier(userTier);\n    \n    const executableActions = intentCache.actions.filter(action => {\n      const executor = this.executors.get(action.type);\n      return executor && executor.canExecute(action, userTier);\n    });\n    \n    for (const action of executableActions) {\n      try {\n        const executor = this.executors.get(action.type);\n        if (executor) {\n          await executor.execute(action);\n          \n          // Show success message\n          const message = executor.getSuccessMessage(action);\n          showSuccessMessage(message);\n          \n          // Track successful execution\n          analytics.track('intent_executed', {\n            actionType: action.type,\n            success: true,\n            userTier\n          });\n          \n          // Remove executed action from cache\n          this.removeActionFromCache(action.id);\n        }\n      } catch (error) {\n        console.error(`Failed to execute action ${action.type}:`, error);\n        showErrorMessage(`Failed to complete ${action.type} action`);\n        \n        // Track failed execution\n        analytics.track('intent_executed', {\n          actionType: action.type,\n          success: false,\n          userTier\n        });\n      }\n    }\n  }\n  \n  private removeActionFromCache(actionId: string): void {\n    const intentCache = IntentManagementService.getInstance().getIntentCache();\n    intentCache.actions = intentCache.actions.filter(a => a.id !== actionId);\n    localStorage.setItem(INTENT_CACHE_KEY, JSON.stringify(intentCache));\n  }\n} ","import { DemoSessionState, DEMO_SESSION_KEY } from '../types/postSignup';\n\nexport class DemoSessionManager {\n  private static instance: DemoSessionManager;\n  \n  private constructor() {}\n  \n  static getInstance(): DemoSessionManager {\n    if (!DemoSessionManager.instance) {\n      DemoSessionManager.instance = new DemoSessionManager();\n    }\n    return DemoSessionManager.instance;\n  }\n  \n  saveDemoState(state: DemoSessionState): void {\n    try {\n      const sessionData = {\n        ...state,\n        timestamp: Date.now()\n      };\n      localStorage.setItem(DEMO_SESSION_KEY, JSON.stringify(sessionData));\n    } catch (error) {\n      console.error('Failed to save demo state:', error);\n    }\n  }\n  \n  getDemoState(): DemoSessionState | null {\n    try {\n      const stored = localStorage.getItem(DEMO_SESSION_KEY);\n      if (!stored) return null;\n      \n      const state: DemoSessionState = JSON.parse(stored);\n      \n      // Check if state is still valid (within 1 hour)\n      const now = Date.now();\n      const oneHour = 60 * 60 * 1000;\n      \n      if (now - state.timestamp > oneHour) {\n        this.clearDemoState();\n        return null;\n      }\n      \n      return state;\n    } catch (error) {\n      console.error('Failed to get demo state:', error);\n      return null;\n    }\n  }\n  \n  clearDemoState(): void {\n    try {\n      localStorage.removeItem(DEMO_SESSION_KEY);\n    } catch (error) {\n      console.error('Failed to clear demo state:', error);\n    }\n  }\n  \n  restoreDemoState(): boolean {\n    const state = this.getDemoState();\n    if (!state) return false;\n    \n    try {\n      // Restore track\n      if (state.currentTrack) {\n        this.loadTrack(state.currentTrack);\n      }\n      \n      // Restore playback position\n      if (state.playbackPosition) {\n        this.setPlaybackPosition(state.playbackPosition);\n      }\n      \n      // Restore mode\n      if (state.mode) {\n        this.setPlaybackMode(state.mode);\n      }\n      \n      // Restore volume and tempo\n      if (state.volume) {\n        this.setVolume(state.volume);\n      }\n      if (state.tempo) {\n        this.setTempo(state.tempo);\n      }\n      \n      // Restore cue points and loops (read-only for guests)\n      if (state.cuePoints) {\n        this.setCuePoints(state.cuePoints);\n      }\n      if (state.loopRegions) {\n        this.setLoopRegions(state.loopRegions);\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to restore demo state:', error);\n      return false;\n    }\n  }\n  \n  // Placeholder methods - these would be implemented to integrate with the actual audio system\n  private loadTrack(track: any): void {\n    // TODO: Integrate with actual audio system\n    console.log('Loading track:', track);\n  }\n  \n  private setPlaybackPosition(position: number): void {\n    // TODO: Integrate with actual audio system\n    console.log('Setting playback position:', position);\n  }\n  \n  private setPlaybackMode(mode: 'preview' | 'loop' | 'cue'): void {\n    // TODO: Integrate with actual audio system\n    console.log('Setting playback mode:', mode);\n  }\n  \n  private setVolume(volume: number): void {\n    // TODO: Integrate with actual audio system\n    console.log('Setting volume:', volume);\n  }\n  \n  private setTempo(tempo: number): void {\n    // TODO: Integrate with actual audio system\n    console.log('Setting tempo:', tempo);\n  }\n  \n  private setCuePoints(cuePoints: any[]): void {\n    // TODO: Integrate with actual audio system\n    console.log('Setting cue points:', cuePoints);\n  }\n  \n  private setLoopRegions(loopRegions: any[]): void {\n    // TODO: Integrate with actual audio system\n    console.log('Setting loop regions:', loopRegions);\n  }\n} ","import { SignupSuccessHandler } from '../types/postSignup';\nimport { IntentManagementService } from './intentManagementService';\nimport { PostSignupActionService } from './postSignupActionService';\nimport { DemoSessionManager } from './demoSessionManager';\nimport { analytics } from './analyticsService';\n\n// Global message functions - will be set by the component\nlet showSuccessMessage: (message: string) => void = (message: string) => {\n  console.log('Success message:', message);\n};\n\nlet showErrorMessage: (message: string) => void = (message: string) => {\n  console.error('Error message:', message);\n};\n\nexport class PostSignupFlowHandler implements SignupSuccessHandler {\n  // Set message functions from the component\n  static setMessageFunctions(\n    successFn: (message: string) => void,\n    errorFn: (message: string) => void\n  ) {\n    showSuccessMessage = successFn;\n    showErrorMessage = errorFn;\n    \n    // Also set for the action service\n    PostSignupActionService.setMessageFunctions(successFn, errorFn);\n  }\n  \n  async handleSignupSuccess(user: any, trigger?: string): Promise<void> {\n    try {\n      // Update user tier in intent cache\n      IntentManagementService.getInstance().updateUserTier('free');\n      \n      // Execute pending actions\n      await PostSignupActionService.getInstance().executePendingActions('free');\n      \n      // Restore demo session if available\n      const demoManager = DemoSessionManager.getInstance();\n      const restored = demoManager.restoreDemoState();\n      \n      if (restored) {\n        showSuccessMessage(\"🎉 Welcome back! Your session has been restored.\");\n      } else {\n        showSuccessMessage(\"🎉 Welcome to Audafact! Start creating your mixes.\");\n      }\n      \n      // Track signup completion\n      analytics.track('signup_completed', {\n        method: 'email',\n        trigger,\n        hasRestoredSession: restored,\n        userTier: 'free'\n      });\n      \n      // Track post-signup flow completion\n      analytics.track('post_signup_flow_completed', {\n        actionsExecuted: 1, // Will be updated based on actual actions\n        sessionRestored: restored,\n        totalTime: Date.now() // Will be calculated based on actual timing\n      });\n      \n    } catch (error) {\n      console.error('Failed to handle signup success:', error);\n      showErrorMessage('Welcome! Some features may take a moment to activate.');\n    }\n  }\n  \n  async handleTierUpgrade(user: any, newTier: string): Promise<void> {\n    try {\n      // Update user tier in intent cache\n      IntentManagementService.getInstance().updateUserTier(newTier);\n      \n      // Execute any pending pro-only actions\n      await PostSignupActionService.getInstance().executePendingActions(newTier);\n      \n      // Show upgrade success message\n      const messages = {\n        pro: \"🚀 Welcome to Pro Creator! You now have access to all features.\",\n        free: \"Your subscription has been updated.\"\n      };\n      \n      showSuccessMessage(messages[newTier as keyof typeof messages] || \"Subscription updated!\");\n      \n      // Track upgrade\n      analytics.track('tier_upgraded', {\n        newTier,\n        previousTier: 'free',\n        timestamp: Date.now()\n      });\n      \n    } catch (error) {\n      console.error('Failed to handle tier upgrade:', error);\n      showErrorMessage('Upgrade processed! Some features may take a moment to activate.');\n    }\n  }\n} ","import { createContext, useContext, useEffect, useState } from 'react';\nimport { User } from '@supabase/supabase-js';\nimport { supabase } from '../services/supabase';\nimport { authService, AuthResponse } from '../auth/authService';\nimport { analytics } from '../services/analyticsService';\nimport { IntentManagementService } from '../services/intentManagementService';\nimport { PostSignupFlowHandler } from '../services/postSignupFlowHandler';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signUp: (email: string, password: string) => Promise<AuthResponse>;\n  signIn: (email: string, password: string) => Promise<AuthResponse>;\n  signInWithGoogle: () => Promise<AuthResponse>;\n  signOut: () => Promise<AuthResponse>;\n  resetPassword: (email: string) => Promise<AuthResponse>;\n  updatePassword: (password: string) => Promise<AuthResponse>;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  signUp: async () => ({ success: false, error: 'Context not initialized' }),\n  signIn: async () => ({ success: false, error: 'Context not initialized' }),\n  signInWithGoogle: async () => ({ success: false, error: 'Context not initialized' }),\n  signOut: async () => ({ success: false, error: 'Context not initialized' }),\n  resetPassword: async () => ({ success: false, error: 'Context not initialized' }),\n  updatePassword: async () => ({ success: false, error: 'Context not initialized' }),\n});\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n      \n      // Set analytics user\n      if (session?.user) {\n        analytics.setUser(session.user.id, 'free'); // Default to free tier\n      }\n    });\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\n      setUser(session?.user ?? null);\n      \n      // Update analytics user\n      if (session?.user) {\n        analytics.setUser(session.user.id, 'free'); // Default to free tier\n        \n        // Handle post-signup flow for new signups\n        if (event === 'SIGNED_IN') {\n          const handler = new PostSignupFlowHandler();\n          await handler.handleSignupSuccess(session.user);\n        }\n        \n        // Handle tier changes\n        if (event === 'USER_UPDATED' && session.user.user_metadata?.tier_changed) {\n          const handler = new PostSignupFlowHandler();\n          await handler.handleTierUpgrade(session.user, session.user.user_metadata.new_tier);\n        }\n      } else {\n        analytics.setUser('', 'guest');\n        \n        // Clear intent cache on signout\n        if (event === 'SIGNED_OUT') {\n          IntentManagementService.getInstance().clearIntentCache();\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signUp = async (email: string, password: string): Promise<AuthResponse> => {\n    return await authService.signUp(email, password);\n  };\n\n  const signIn = async (email: string, password: string): Promise<AuthResponse> => {\n    return await authService.signIn(email, password);\n  };\n\n  const signOut = async (): Promise<AuthResponse> => {\n    const result = await authService.signOut();\n    if (result.success) {\n      setUser(null);\n    }\n    return result;\n  };\n\n  const resetPassword = async (email: string): Promise<AuthResponse> => {\n    return await authService.resetPassword(email);\n  };\n\n  const updatePassword = async (password: string): Promise<AuthResponse> => {\n    return await authService.updatePassword(password);\n  };\n\n  const signInWithGoogle = async (): Promise<AuthResponse> => {\n    return await authService.signInWithGoogle();\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      user, \n      loading, \n      signUp, \n      signIn, \n      signInWithGoogle,\n      signOut, \n      resetPassword, \n      updatePassword \n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext); ","import React, { createContext, useContext, useState, useCallback } from 'react';\n\ninterface AudioContextProviderProps {\n  children: React.ReactNode;\n}\n\ninterface AudioContextValue {\n  audioContext: AudioContext | null;\n  initializeAudio: () => Promise<AudioContext>;\n  resumeAudioContext: () => Promise<void>;\n}\n\nconst AudioContextInstance = createContext<AudioContextValue | null>(null);\n\nexport const AudioProvider: React.FC<AudioContextProviderProps> = ({ children }) => {\n  const [audioContext, setAudioContext] = useState<AudioContext | null>(null);\n\n  const initializeAudio = useCallback(async (): Promise<AudioContext> => {\n    try {\n      // Create a new context if one doesn't exist\n      if (!audioContext) {\n        // Create a new AudioContext with explicit options to ensure compatibility\n        const newContext = new (window.AudioContext || (window as any).webkitAudioContext)({\n          // Some browsers may require a sample rate to be specified\n          sampleRate: 44100,\n          // Start in a resumed state where possible\n          latencyHint: 'interactive'\n        });\n        \n        // If the state is suspended, we need to explicitly resume it\n        if (newContext.state === 'suspended') {\n          try {\n            await newContext.resume();\n          } catch (resumeError) {\n            console.error('Failed to resume audio context:', resumeError);\n            // Continue anyway - we'll try to handle it later\n          }\n        }\n        \n        setAudioContext(newContext);\n        return newContext;\n      }\n      \n      // If context exists but is suspended, resume it\n      if (audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      \n      return audioContext;\n    } catch (error) {\n      console.error('Failed to initialize audio context:', error);\n      throw error;\n    }\n  }, [audioContext]);\n  \n  const resumeAudioContext = useCallback(async (): Promise<void> => {\n    try {\n      if (audioContext && audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n    } catch (error) {\n      console.error('Failed to resume audio context:', error);\n      throw error;\n    }\n  }, [audioContext]);\n\n  const value = {\n    audioContext,\n    initializeAudio,\n    resumeAudioContext\n  };\n\n  return (\n    <AudioContextInstance.Provider value={value}>\n      {children}\n    </AudioContextInstance.Provider>\n  );\n};\n\nexport const AudioContextProvider = AudioProvider;\n\nexport const useAudioContext = (): AudioContextValue => {\n  const context = useContext(AudioContextInstance);\n  if (!context) {\n    throw new Error('useAudioContext must be used within an AudioProvider');\n  }\n  return context;\n}; ","import React, { createContext, useContext, useState } from 'react';\n\ninterface SidePanelContextType {\n  isOpen: boolean;\n  toggleSidePanel: () => void;\n  openSidePanel: () => void;\n  closeSidePanel: () => void;\n}\n\nconst SidePanelContext = createContext<SidePanelContextType | undefined>(undefined);\n\nexport const useSidePanel = () => {\n  const context = useContext(SidePanelContext);\n  if (context === undefined) {\n    throw new Error('useSidePanel must be used within a SidePanelProvider');\n  }\n  return context;\n};\n\ninterface SidePanelProviderProps {\n  children: React.ReactNode;\n}\n\nexport const SidePanelProvider: React.FC<SidePanelProviderProps> = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleSidePanel = () => setIsOpen(!isOpen);\n  const openSidePanel = () => setIsOpen(true);\n  const closeSidePanel = () => setIsOpen(false);\n\n  return (\n    <SidePanelContext.Provider value={{\n      isOpen,\n      toggleSidePanel,\n      openSidePanel,\n      closeSidePanel\n    }}>\n      {children}\n    </SidePanelContext.Provider>\n  );\n}; ","import { supabase } from './supabase';\nimport { User, Upload, Session, Recording } from '../types/music';\n\nexport class DatabaseService {\n  /**\n   * Get current user's profile\n   */\n  static async getCurrentUser(): Promise<User | null> {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return null;\n\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .eq('id', user.id)\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error getting current user:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Update user profile\n   */\n  static async updateUser(userId: string, updates: Partial<User>): Promise<User | null> {\n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .update(updates)\n        .eq('id', userId)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error updating user:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Create a new upload record\n   */\n  static async createUpload(upload: Omit<Upload, 'id' | 'created_at'>): Promise<Upload | null> {\n    try {\n      const { data, error } = await supabase\n        .from('uploads')\n        .insert(upload)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error creating upload:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get user's uploads\n   */\n  static async getUserUploads(userId: string): Promise<Upload[]> {\n    try {\n      const { data, error } = await supabase\n        .from('uploads')\n        .select('*')\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Error getting user uploads:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Delete an upload\n   */\n  static async deleteUpload(uploadId: string, userId: string): Promise<boolean> {\n    try {\n      const { error } = await supabase\n        .from('uploads')\n        .delete()\n        .eq('id', uploadId)\n        .eq('user_id', userId);\n\n      if (error) throw error;\n      return true;\n    } catch (error) {\n      console.error('Error deleting upload:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create a new session\n   */\n  static async createSession(session: Omit<Session, 'id' | 'created_at' | 'updated_at'>): Promise<Session | null> {\n    try {\n      const { data, error } = await supabase\n        .from('sessions')\n        .insert(session)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error creating session:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get user's sessions\n   */\n  static async getUserSessions(userId: string): Promise<Session[]> {\n    try {\n      const { data, error } = await supabase\n        .from('sessions')\n        .select('*')\n        .eq('user_id', userId)\n        .order('updated_at', { ascending: false });\n\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Error getting user sessions:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Get a specific session\n   */\n  static async getSession(sessionId: string, userId: string): Promise<Session | null> {\n    try {\n      const { data, error } = await supabase\n        .from('sessions')\n        .select('*')\n        .eq('id', sessionId)\n        .eq('user_id', userId)\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error getting session:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Update a session\n   */\n  static async updateSession(\n    sessionId: string,\n    userId: string,\n    updates: Partial<Session>\n  ): Promise<Session | null> {\n    try {\n      const { data, error } = await supabase\n        .from('sessions')\n        .update(updates)\n        .eq('id', sessionId)\n        .eq('user_id', userId)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error updating session:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Delete a session\n   */\n  static async deleteSession(sessionId: string, userId: string): Promise<boolean> {\n    try {\n      const { error } = await supabase\n        .from('sessions')\n        .delete()\n        .eq('id', sessionId)\n        .eq('user_id', userId);\n\n      if (error) throw error;\n      return true;\n    } catch (error) {\n      console.error('Error deleting session:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create a new recording\n   */\n  static async createRecording(recording: Omit<Recording, 'id' | 'created_at'>): Promise<Recording | null> {\n    try {\n      const { data, error } = await supabase\n        .from('recordings')\n        .insert(recording)\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      console.error('Error creating recording:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get recordings for a session\n   */\n  static async getSessionRecordings(sessionId: string, userId: string): Promise<Recording[]> {\n    try {\n      const { data, error } = await supabase\n        .from('recordings')\n        .select('*')\n        .eq('session_id', sessionId)\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Error getting session recordings:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Get user's recordings\n   */\n  static async getUserRecordings(userId: string): Promise<Recording[]> {\n    try {\n      const { data, error } = await supabase\n        .from('recordings')\n        .select('*')\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Error getting user recordings:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Delete a recording\n   */\n  static async deleteRecording(recordingId: string, userId: string): Promise<boolean> {\n    try {\n      const { error } = await supabase\n        .from('recordings')\n        .delete()\n        .eq('id', recordingId)\n        .eq('user_id', userId);\n\n      if (error) throw error;\n      return true;\n    } catch (error) {\n      console.error('Error deleting recording:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get session with all related data\n   */\n  static async getSessionWithData(sessionId: string, userId: string): Promise<{\n    session: Session | null;\n    uploads: Upload[];\n    recordings: Recording[];\n  }> {\n    try {\n      const [session, uploads, recordings] = await Promise.all([\n        this.getSession(sessionId, userId),\n        this.getUserUploads(userId),\n        this.getSessionRecordings(sessionId, userId)\n      ]);\n\n      return {\n        session,\n        uploads,\n        recordings\n      };\n    } catch (error) {\n      console.error('Error getting session with data:', error);\n      return {\n        session: null,\n        uploads: [],\n        recordings: []\n      };\n    }\n  }\n} ","import React, { createContext, useContext, useState, useRef, useCallback, useEffect } from 'react';\nimport { DatabaseService } from '../services/databaseService';\nimport { StorageService } from '../services/storageService';\nimport { useAuth } from './AuthContext';\nimport { supabase } from '../services/supabase';\n\ninterface RecordingEvent {\n  timestamp: number;\n  type: 'cue_trigger' | 'loop_play' | 'loop_stop' | 'volume_change' | 'speed_change' | 'filter_change';\n  trackId: string;\n  data: any;\n}\n\ninterface RecordingSession {\n  id: string;\n  startTime: number;\n  endTime?: number;\n  events: RecordingEvent[];\n  tracks: string[];\n  duration: number;\n}\n\ninterface Performance {\n  id: string;\n  startTime: number;\n  endTime?: number;\n  events: RecordingEvent[];\n  tracks: string[];\n  duration: number;\n  audioBlob?: Blob; // Add audio blob to performances\n  databaseId?: string; // Database recording ID if saved to database\n}\n\ninterface AudioRecording {\n  id: string;\n  startTime: number;\n  endTime?: number;\n  audioBlob?: Blob;\n  tracks: string[];\n  duration: number;\n  tempo: number;\n  countInBeats: number;\n  events: RecordingEvent[]; // Add events to audio recordings\n}\n\ninterface RecordingContextValue {\n  // Performance recording\n  isRecordingPerformance: boolean;\n  currentPerformance: Performance | null;\n  performances: Performance[];\n  startPerformanceRecording: (appAudioContext?: AudioContext) => void;\n  stopPerformanceRecording: () => void;\n  addRecordingEvent: (event: Omit<RecordingEvent, 'timestamp'>) => void;\n  getRecordingDestination: () => MediaStreamAudioDestinationNode | null;\n  \n  // Audio recording\n  isRecordingAudio: boolean;\n  currentAudioRecording: AudioRecording | null;\n  audioRecordings: AudioRecording[];\n  startAudioRecording: (tempo: number, countInBeats?: number) => void;\n  stopAudioRecording: () => void;\n  \n  // Sessions (state snapshots)\n  savedSessions: RecordingSession[];\n  saveCurrentState: (studioState: any) => void;\n  \n  // Management\n  clearAll: () => void;\n  exportPerformance: (performanceId: string) => void;\n  exportSession: (sessionId: string) => void;\n  exportAudioRecording: (recordingId: string) => void;\n  deletePerformance: (performanceId: string) => Promise<void>;\n  deleteSession: (sessionId: string) => Promise<void>;\n  deleteAudioRecording: (recordingId: string) => Promise<void>;\n}\n\n// Helper function to convert AudioBuffer to WAV format\nconst convertToWav = async (audioBuffer: AudioBuffer): Promise<Blob | null> => {\n  try {\n    const length = audioBuffer.length;\n    const numberOfChannels = audioBuffer.numberOfChannels;\n    const sampleRate = audioBuffer.sampleRate;\n    \n    // Create WAV header\n    const buffer = new ArrayBuffer(44 + length * numberOfChannels * 2);\n    const view = new DataView(buffer);\n    \n    // WAV header\n    const writeString = (offset: number, string: string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, 36 + length * numberOfChannels * 2, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numberOfChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, sampleRate * numberOfChannels * 2, true);\n    view.setUint16(32, numberOfChannels * 2, true);\n    view.setUint16(34, 16, true);\n    writeString(36, 'data');\n    view.setUint32(40, length * numberOfChannels * 2, true);\n    \n    // Write audio data\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < numberOfChannels; channel++) {\n        const sample = Math.max(-1, Math.min(1, audioBuffer.getChannelData(channel)[i]));\n        view.setInt16(offset, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true);\n        offset += 2;\n      }\n    }\n    \n    return new Blob([buffer], { type: 'audio/wav' });\n  } catch (error) {\n    console.error('Error converting to WAV:', error);\n    return null;\n  }\n};\n\nconst RecordingContextInstance = createContext<RecordingContextValue | null>(null);\n\nexport const RecordingProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { user } = useAuth();\n  \n  // Performance recording state\n  const [isRecordingPerformance, setIsRecordingPerformance] = useState(false);\n  const [currentPerformance, setCurrentPerformance] = useState<Performance | null>(null);\n  const [performances, setPerformances] = useState<Performance[]>(() => {\n    const saved = localStorage.getItem('audafact_performances');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const performanceStartTimeRef = useRef<number>(0);\n  \n  // Audio recording state\n  const [isRecordingAudio, setIsRecordingAudio] = useState(false);\n  const [currentAudioRecording, setCurrentAudioRecording] = useState<AudioRecording | null>(null);\n  const [audioRecordings, setAudioRecordings] = useState<AudioRecording[]>(() => {\n    const saved = localStorage.getItem('audafact_audioRecordings');\n    return saved ? JSON.parse(saved) : [];\n  });\n  \n  // Sessions state\n  const [savedSessions, setSavedSessions] = useState<RecordingSession[]>(() => {\n    const saved = localStorage.getItem('audafact_savedSessions');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // MediaRecorder ref for audio recording\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioStreamRef = useRef<MediaStream | null>(null);\n  const performanceEventsRef = useRef<RecordingEvent[]>([]);\n  const performanceTracksRef = useRef<string[]>([]);\n  const audioCheckIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const recordingDestinationRef = useRef<MediaStreamAudioDestinationNode | null>(null);\n\n  // Persist data to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('audafact_performances', JSON.stringify(performances));\n  }, [performances]);\n\n  useEffect(() => {\n    localStorage.setItem('audafact_audioRecordings', JSON.stringify(audioRecordings));\n  }, [audioRecordings]);\n\n  useEffect(() => {\n    localStorage.setItem('audafact_savedSessions', JSON.stringify(savedSessions));\n  }, [savedSessions]);\n\n  // Combined recording functions\n  const startPerformanceRecording = useCallback(async (appAudioContext?: AudioContext) => {\n    try {\n      const performanceId = `performance_${Date.now()}`;\n      const startTime = Date.now();\n      performanceStartTimeRef.current = startTime;\n      \n      if (!appAudioContext) {\n        console.error('No audio context provided for recording');\n        alert('Audio context is required for recording. Please ensure audio is initialized.');\n        return;\n      }\n      \n      // Create a MediaStreamDestination to capture audio from the app\n      const destination = appAudioContext.createMediaStreamDestination();\n      recordingDestinationRef.current = destination;\n      \n      // Create MediaRecorder with the captured audio stream\n      let mimeType = '';\n      if (MediaRecorder.isTypeSupported('audio/webm;codecs=opus')) {\n        mimeType = 'audio/webm;codecs=opus';\n      } else if (MediaRecorder.isTypeSupported('audio/webm')) {\n        mimeType = 'audio/webm';\n      } else if (MediaRecorder.isTypeSupported('audio/mp4;codecs=mp4a.40.2')) {\n        mimeType = 'audio/mp4;codecs=mp4a.40.2';\n      } else if (MediaRecorder.isTypeSupported('audio/mp4')) {\n        mimeType = 'audio/mp4';\n      }\n      \n\n      \n      const mediaRecorder = new MediaRecorder(destination.stream, mimeType ? { mimeType } : undefined);\n      \n      // Add error handling for MediaRecorder\n      mediaRecorder.onerror = (event) => {\n        console.error('MediaRecorder error:', event);\n      };\n      \n      mediaRecorderRef.current = mediaRecorder;\n      audioStreamRef.current = destination.stream;\n      \n      const chunks: Blob[] = [];\n      \n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n      \n\n      \n      mediaRecorder.onstop = async () => {\n        const originalBlob = new Blob(chunks, { type: mimeType || 'audio/webm' });\n        \n        // Convert to WAV format for better compatibility\n        let finalAudioBlob = originalBlob;\n        try {\n          const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n          const arrayBuffer = await originalBlob.arrayBuffer();\n          const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n          \n\n          \n          // Convert to WAV format for better compatibility\n          const wavBlob = await convertToWav(audioBuffer);\n          if (wavBlob) {\n            finalAudioBlob = wavBlob;\n          }\n        } catch (error) {\n          console.warn('Failed to convert audio format, using original:', error);\n        }\n        \n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        \n        const completedPerformance: Performance = {\n          id: performanceId,\n          startTime,\n          endTime,\n          duration,\n          events: performanceEventsRef.current,\n          tracks: performanceTracksRef.current,\n          audioBlob: finalAudioBlob\n        };\n        \n        setPerformances(prev => [completedPerformance, ...prev]);\n        setCurrentPerformance(null);\n        setIsRecordingPerformance(false);\n        \n        // Save recording to database if user is authenticated\n        if (user?.id && finalAudioBlob) {\n          try {\n            // First, ensure user record exists in the users table\n            const { data: existingUser, error: userError } = await supabase\n              .from('users')\n              .select('id')\n              .eq('id', user.id)\n              .single();\n            \n            if (userError && userError.code === 'PGRST116') {\n              // User doesn't exist, create them\n              const { error: createUserError } = await supabase\n                .from('users')\n                .insert({\n                  id: user.id,\n                  access_tier: 'free'\n                });\n              \n              if (createUserError) {\n                console.error('Failed to create user record:', createUserError);\n                return;\n              }\n            } else if (userError) {\n              console.error('Error checking user record:', userError);\n              return;\n            }\n            \n            // Check recording limits first\n            const { count: recordingCount, error: countError } = await supabase\n              .from('recordings')\n              .select('id', { count: 'exact' })\n              .eq('user_id', user.id);\n            \n            if (countError) {\n              console.error('Error checking recording count:', countError);\n              return;\n            }\n            \n            const currentRecordingCount = recordingCount || 0;\n            \n            // Get user's access tier from database\n            const { data: userData, error: userTierError } = await supabase\n              .from('users')\n              .select('access_tier')\n              .eq('id', user.id)\n              .single();\n            \n            const userTier = userTierError ? 'free' : (userData?.access_tier || 'free');\n            const maxRecordings = userTier === 'pro' ? Infinity : 1;\n            \n            if (currentRecordingCount >= maxRecordings) {\n              console.warn('User has reached recording limit');\n              return;\n            }\n            \n            // Create database record without requiring a session\n            const recordingRecord = await DatabaseService.createRecording({\n              user_id: user.id,\n              session_id: undefined, // Optional - recordings can exist without sessions\n              recording_url: `local://recording_${Date.now()}.wav`, // Placeholder URL\n              length: duration / 1000, // Convert to seconds\n              notes: `Performance recording with ${performanceEventsRef.current.length} events`\n            });\n            \n            if (recordingRecord) {\n              // Update the performance with the database ID\n              setPerformances(prev => prev.map(p => \n                p.id === performanceId ? { ...p, databaseId: recordingRecord.id } : p\n              ));\n              \n              // Dispatch event to notify that recording was saved\n              window.dispatchEvent(new CustomEvent('recordingSaved', {\n                detail: { userId: user.id, recordingCount: 1 }\n              }));\n            }\n          } catch (error) {\n            console.error('Failed to save recording to database:', error);\n            // Don't fail the recording if database save fails\n          }\n        }\n        \n        // Clear refs and stop audio monitoring\n        mediaRecorderRef.current = null;\n        audioStreamRef.current = null;\n        recordingDestinationRef.current = null;\n        \n        // Stop audio level monitoring\n        if (audioCheckIntervalRef.current) {\n          clearTimeout(audioCheckIntervalRef.current);\n          audioCheckIntervalRef.current = null;\n        }\n        \n\n      };\n      \n      const newPerformance: Performance = {\n        id: performanceId,\n        startTime,\n        events: [],\n        tracks: [],\n        duration: 0\n      };\n      \n      // Initialize refs for tracking events and tracks\n      performanceEventsRef.current = [];\n      performanceTracksRef.current = [];\n      \n      setCurrentPerformance(newPerformance);\n      setIsRecordingPerformance(true);\n      \n      // Start recording\n      mediaRecorder.start();\n    } catch (error) {\n      console.error('Failed to start performance recording:', error);\n      alert('Failed to start recording. Please check microphone permissions.');\n    }\n  }, [currentPerformance]);\n\n  const stopPerformanceRecording = useCallback(() => {\n    if (!currentPerformance || !mediaRecorderRef.current) return;\n    \n    try {\n      // Stop the MediaRecorder\n      mediaRecorderRef.current.stop();\n      \n      // Stop the audio stream\n      if (audioStreamRef.current) {\n        audioStreamRef.current.getTracks().forEach(track => track.stop());\n        audioStreamRef.current = null;\n      }\n      \n      mediaRecorderRef.current = null;\n      \n\n    } catch (error) {\n      console.error('Error stopping performance recording:', error);\n    }\n  }, [currentPerformance]);\n\n  const addRecordingEvent = useCallback((event: Omit<RecordingEvent, 'timestamp'>) => {\n    if (!isRecordingPerformance || !currentPerformance) {\n      return;\n    }\n    \n    const timestamp = Date.now() - performanceStartTimeRef.current;\n    const newEvent: RecordingEvent = {\n      ...event,\n      timestamp\n    };\n    \n    // Update refs immediately\n    performanceEventsRef.current = [...performanceEventsRef.current, newEvent];\n    if (!performanceTracksRef.current.includes(event.trackId)) {\n      performanceTracksRef.current = [...performanceTracksRef.current, event.trackId];\n    }\n    \n\n    \n    setCurrentPerformance(prev => {\n      if (!prev) return null;\n      \n      // Add track to performance if not already included\n      const tracks = prev.tracks.includes(event.trackId) \n        ? prev.tracks \n        : [...prev.tracks, event.trackId];\n      \n      return {\n        ...prev,\n        events: [...prev.events, newEvent],\n        tracks\n      };\n    });\n  }, [isRecordingPerformance, currentPerformance]);\n\n    // Audio recording functions (deprecated - now combined with performance recording)\n  const startAudioRecording = useCallback(async (tempo: number, countInBeats: number = 4) => {\n    console.warn('startAudioRecording is deprecated. Use startPerformanceRecording instead.');\n    await startPerformanceRecording();\n  }, [startPerformanceRecording]);\n\n  const stopAudioRecording = useCallback(() => {\n    console.warn('stopAudioRecording is deprecated. Use stopPerformanceRecording instead.');\n    stopPerformanceRecording();\n  }, [stopPerformanceRecording]);\n\n  // Session functions\n  const saveCurrentState = useCallback(async (studioState: any) => {\n    const sessionId = `session_${Date.now()}`;\n    const currentTime = Date.now();\n    \n    const stateSession: RecordingSession = {\n      id: sessionId,\n      startTime: currentTime,\n      endTime: currentTime,\n      events: [{\n        timestamp: 0,\n        type: 'cue_trigger', // Using a dummy type for state snapshots\n        trackId: 'studio',\n        data: studioState\n      }],\n      tracks: studioState.tracks?.map((track: any) => track.id) || [],\n      duration: 0\n    };\n    \n    // Save to local state immediately for UI responsiveness\n    setSavedSessions(prev => [stateSession, ...prev]);\n    \n    // If user is authenticated, save to database\n    if (user?.id) {\n      try {\n        // Check if user can save more sessions\n        const { count: sessionCount, error: countError } = await supabase\n          .from('sessions')\n          .select('id', { count: 'exact' })\n          .eq('user_id', user.id);\n        \n        if (countError) {\n          console.error('Error checking session count:', countError);\n          return;\n        }\n        \n        const currentSessionCount = sessionCount || 0;\n        \n        // Get user's access tier from database\n        const { data: userData, error: userError } = await supabase\n          .from('users')\n          .select('access_tier')\n          .eq('id', user.id)\n          .single();\n        \n        const userTier = userError ? 'free' : (userData?.access_tier || 'free');\n        const maxSessions = userTier === 'pro' ? Infinity : 2;\n        \n        if (currentSessionCount >= maxSessions) {\n          console.warn('User has reached session limit');\n          // Remove from local state since it couldn't be saved to database\n          setSavedSessions(prev => prev.filter(s => s.id !== sessionId));\n          return;\n        }\n        \n        // Helper function to check if a string is a valid UUID\n        const isValidUUID = (str: string): boolean => {\n          const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n          return uuidRegex.test(str);\n        };\n\n        // Filter track IDs to only include valid UUIDs (uploaded tracks)\n        const validTrackIds = studioState.tracks\n          ?.map((track: any) => track.id)\n          .filter((id: string) => isValidUUID(id)) || [];\n\n        // Save to database\n        const dbSession = await DatabaseService.createSession({\n          user_id: user.id,\n          session_name: `Studio Session ${new Date().toLocaleString()}`,\n          track_ids: validTrackIds, // Only include valid UUIDs\n          cuepoints: studioState.tracks?.flatMap((track: any) => track.cuePoints || []) || [],\n          loop_regions: studioState.tracks?.map((track: any) => ({\n            trackId: track.id,\n            start: track.loopStart,\n            end: track.loopEnd\n          })).filter((region: any) => region.start !== undefined && region.end !== undefined) || [],\n          mode: 'loop'\n        });\n        \n        if (dbSession) {\n          // Update local session with database ID\n          setSavedSessions(prev => prev.map(s => \n            s.id === sessionId ? { ...s, id: dbSession.id } : s\n          ));\n          \n          // Dispatch event to notify that session was saved\n          window.dispatchEvent(new CustomEvent('sessionSaved', {\n            detail: { userId: user.id, sessionCount: currentSessionCount + 1 }\n          }));\n        } else {\n          console.error('Failed to save session to database');\n          // Remove from local state since it couldn't be saved to database\n          setSavedSessions(prev => prev.filter(s => s.id !== sessionId));\n        }\n      } catch (error) {\n        console.error('Error saving session to database:', error);\n        // Remove from local state since it couldn't be saved to database\n        setSavedSessions(prev => prev.filter(s => s.id !== sessionId));\n      }\n    }\n  }, [user]);\n\n  // Management functions\n  const clearAll = useCallback(() => {\n    setPerformances([]);\n    setAudioRecordings([]);\n    setSavedSessions([]);\n    // Also clear from localStorage\n    localStorage.removeItem('audafact_performances');\n    localStorage.removeItem('audafact_audioRecordings');\n    localStorage.removeItem('audafact_savedSessions');\n  }, []);\n\n  const exportPerformance = useCallback((performanceId: string) => {\n    const performance = performances.find(p => p.id === performanceId);\n    if (!performance) return;\n    \n    // Export performance data (without audio blob)\n    const { audioBlob, ...performanceData } = performance;\n    const dataStr = JSON.stringify(performanceData, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `audafact_performance_${performanceId}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    \n    // Export audio if it exists\n    if (audioBlob) {\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audioLink = document.createElement('a');\n      audioLink.href = audioUrl;\n      \n      // Determine file extension based on MIME type\n      let extension = 'webm';\n      if (audioBlob.type.includes('mp4')) {\n        extension = 'm4a'; // Use .m4a for audio MP4 files\n      } else if (audioBlob.type.includes('wav')) {\n        extension = 'wav';\n      } else if (audioBlob.type.includes('ogg')) {\n        extension = 'ogg';\n      } else if (audioBlob.type.includes('opus')) {\n        extension = 'opus';\n      }\n      \n\n      \n      audioLink.download = `audafact_performance_${performanceId}.${extension}`;\n      document.body.appendChild(audioLink);\n      audioLink.click();\n      document.body.removeChild(audioLink);\n      URL.revokeObjectURL(audioUrl);\n    }\n  }, [performances]);\n\n  const exportSession = useCallback((sessionId: string) => {\n    const session = savedSessions.find(s => s.id === sessionId);\n    if (!session) return;\n    \n    const dataStr = JSON.stringify(session, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `audafact_session_${sessionId}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }, [savedSessions]);\n\n  const exportAudioRecording = useCallback((recordingId: string) => {\n    const recording = audioRecordings.find(r => r.id === recordingId);\n    if (!recording || !recording.audioBlob) return;\n    \n    const url = URL.createObjectURL(recording.audioBlob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `audafact_recording_${recordingId}.wav`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }, [audioRecordings]);\n\n  const deletePerformance = useCallback(async (performanceId: string) => {\n    // Find the performance to get its database ID\n    const performance = performances.find(p => p.id === performanceId);\n    \n    // Remove from local state immediately for UI responsiveness\n    setPerformances(prev => prev.filter(p => p.id !== performanceId));\n    \n    // If performance has a database ID and user is authenticated, delete from database\n    if (performance?.databaseId && user?.id) {\n      try {\n        const success = await DatabaseService.deleteRecording(performance.databaseId, user.id);\n        if (!success) {\n          console.error('Failed to delete recording from database');\n          // Could add error handling here (e.g., show toast, restore to local state)\n        }\n      } catch (error) {\n        console.error('Error deleting recording from database:', error);\n        // Could add error handling here\n      }\n    }\n  }, [performances, user]);\n\n  const deleteSession = useCallback(async (sessionId: string) => {\n    // Remove from local state immediately for UI responsiveness\n    setSavedSessions(prev => prev.filter(s => s.id !== sessionId));\n    \n    // If user is authenticated, delete from database\n    if (user?.id) {\n      try {\n        const success = await DatabaseService.deleteSession(sessionId, user.id);\n        if (!success) {\n          console.error('Failed to delete session from database');\n          // Could add error handling here (e.g., show toast, restore to local state)\n        }\n      } catch (error) {\n        console.error('Error deleting session from database:', error);\n        // Could add error handling here\n      }\n    }\n  }, [user]);\n\n  const deleteAudioRecording = useCallback(async (recordingId: string) => {\n    // Remove from local state immediately for UI responsiveness\n    setAudioRecordings(prev => prev.filter(r => r.id !== recordingId));\n    \n    // If user is authenticated, delete from database\n    if (user?.id) {\n      try {\n        const success = await DatabaseService.deleteRecording(recordingId, user.id);\n        if (!success) {\n          console.error('Failed to delete recording from database');\n          // Could add error handling here (e.g., show toast, restore to local state)\n        }\n      } catch (error) {\n        console.error('Error deleting recording from database:', error);\n        // Could add error handling here\n      }\n    }\n  }, [user]);\n\n  const getRecordingDestination = useCallback(() => {\n    return recordingDestinationRef.current;\n  }, []);\n\n  const value: RecordingContextValue = {\n    // Performance recording\n    isRecordingPerformance,\n    currentPerformance,\n    performances,\n    startPerformanceRecording,\n    stopPerformanceRecording,\n    addRecordingEvent,\n    getRecordingDestination,\n    \n    // Audio recording\n    isRecordingAudio,\n    currentAudioRecording,\n    audioRecordings,\n    startAudioRecording,\n    stopAudioRecording,\n    \n    // Sessions\n    savedSessions,\n    saveCurrentState,\n    \n    // Management\n    clearAll,\n    exportPerformance,\n    exportSession,\n    exportAudioRecording,\n    deletePerformance,\n    deleteSession,\n    deleteAudioRecording\n  };\n\n  return (\n    <RecordingContextInstance.Provider value={value}>\n      {children}\n    </RecordingContextInstance.Provider>\n  );\n};\n\nexport const useRecording = (): RecordingContextValue => {\n  const context = useContext(RecordingContextInstance);\n  if (!context) {\n    throw new Error('useRecording must be used within a RecordingProvider');\n  }\n  return context;\n}; ","import { supabase } from './supabase';\nimport { LibraryTrack } from '../types/music';\n\nexport interface DatabaseLibraryTrack {\n  id: string;\n  track_id: string;\n  name: string;\n  artist: string | null;\n  genre: string;\n  bpm: number | null;\n  key: string | null;\n  duration: number | null;\n  file_url: string;\n  type: 'wav' | 'mp3';\n  size: string | null;\n  tags: string[];\n  is_pro_only: boolean;\n  preview_url: string | null;\n  rotation_week: number | null;\n}\n\nexport class LibraryService {\n  /**\n   * Get library tracks based on user tier\n   * Free users get 10 rotating tracks, pro users get all tracks\n   */\n  static async getLibraryTracks(userTier: 'guest' | 'free' | 'pro'): Promise<LibraryTrack[]> {\n    try {\n      let query = supabase\n        .from('library_tracks')\n        .select('*')\n        .eq('is_active', true);\n\n      // For free users, only get tracks for current rotation week\n      if (userTier === 'free') {\n        query = query.eq('is_pro_only', false);\n        // We'll filter by rotation week in the database function\n        const { data, error } = await supabase.rpc('get_free_user_tracks');\n        if (error) throw error;\n        return this.transformDatabaseTracks(data || []);\n      }\n\n      // For pro users, get all tracks\n      if (userTier === 'pro') {\n        const { data, error } = await supabase.rpc('get_pro_user_tracks');\n        if (error) throw error;\n        return this.transformDatabaseTracks(data || []);\n      }\n\n      // For guests, get free tracks for current rotation week\n      const { data, error } = await supabase.rpc('get_free_user_tracks');\n      if (error) throw error;\n      return this.transformDatabaseTracks(data || []);\n    } catch (error) {\n      console.error('Error fetching library tracks:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Get tracks by genre\n   */\n  static async getTracksByGenre(genre: string, userTier: 'guest' | 'free' | 'pro'): Promise<LibraryTrack[]> {\n    const tracks = await this.getLibraryTracks(userTier);\n    return tracks.filter(track => track.genre === genre);\n  }\n\n  /**\n   * Get available genres for current user tier\n   */\n  static async getAvailableGenres(userTier: 'guest' | 'free' | 'pro'): Promise<string[]> {\n    const tracks = await this.getLibraryTracks(userTier);\n    return [...new Set(tracks.map(track => track.genre))];\n  }\n\n  /**\n   * Get track by ID\n   */\n  static async getTrackById(trackId: string, userTier: 'guest' | 'free' | 'pro'): Promise<LibraryTrack | null> {\n    const tracks = await this.getLibraryTracks(userTier);\n    return tracks.find(track => track.id === trackId) || null;\n  }\n\n  /**\n   * Get current rotation week info\n   */\n  static async getCurrentRotationInfo(): Promise<{ \n    weekNumber: number; \n    trackCount: number;\n    nextRotationDate: string;\n    daysUntilRotation: number;\n  }> {\n    try {\n      const { data, error } = await supabase.rpc('get_rotation_info');\n      if (error) throw error;\n      \n      if (data && data.length > 0) {\n        const info = data[0];\n        return {\n          weekNumber: info.current_week,\n          trackCount: info.current_track_count,\n          nextRotationDate: info.next_rotation_date,\n          daysUntilRotation: info.days_until_rotation\n        };\n      }\n      \n      return { weekNumber: 1, trackCount: 0, nextRotationDate: '', daysUntilRotation: 0 };\n    } catch (error) {\n      console.error('Error getting rotation info:', error);\n      return { weekNumber: 1, trackCount: 0, nextRotationDate: '', daysUntilRotation: 0 };\n    }\n  }\n\n  /**\n   * Transform database track to LibraryTrack format\n   */\n  private static transformDatabaseTracks(dbTracks: DatabaseLibraryTrack[]): LibraryTrack[] {\n    return dbTracks.map(dbTrack => ({\n      id: dbTrack.track_id,\n      name: dbTrack.name,\n      artist: dbTrack.artist || undefined,\n      genre: dbTrack.genre,\n      bpm: dbTrack.bpm || 0,\n      key: dbTrack.key || undefined,\n      duration: dbTrack.duration || 0,\n      file: this.getLibraryTrackUrl(dbTrack.track_id, dbTrack.type), // Generate storage URL\n      type: dbTrack.type,\n      size: dbTrack.size || 'Unknown',\n      tags: dbTrack.tags,\n      isProOnly: dbTrack.is_pro_only,\n      previewUrl: dbTrack.preview_url || undefined\n    }));\n  }\n\n  /**\n   * Get the storage URL for a library track\n   */\n  private static getLibraryTrackUrl(trackId: string, fileType: string): string {\n    const { data } = supabase.storage\n      .from('library-tracks')\n      .getPublicUrl(`${trackId}.${fileType}`);\n    \n    return data.publicUrl;\n  }\n\n  /**\n   * Fetch audio file from URL\n   */\n  static async fetchAudioFile(fileUrl: string): Promise<File> {\n    try {\n      const response = await fetch(fileUrl);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch audio file: ${response.statusText}`);\n      }\n      \n      const blob = await response.blob();\n      const fileName = fileUrl.split('/').pop() || 'audio.wav';\n      \n      return new File([blob], fileName, { type: blob.type });\n    } catch (error) {\n      console.error('Error fetching audio file:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get track count for current user tier\n   */\n  static async getTrackCount(userTier: 'guest' | 'free' | 'pro'): Promise<number> {\n    const tracks = await this.getLibraryTracks(userTier);\n    return tracks.length;\n  }\n} ","import { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { LibraryService } from '../services/libraryService';\n\n// Define AudioAsset interface for demo tracks\nexport interface AudioAsset {\n  id: string;\n  name: string;\n  genre: string;\n  bpm: number;\n  file: string;\n  type: 'wav' | 'mp3';\n  size: string;\n  duration?: number;\n}\n\n// Demo tracks now come from the database (guest rotation)\n\n// Random selection helper preserving no-repeat behavior\nconst selectRandom = (tracks: AudioAsset[]): AudioAsset | null => {\n  if (!tracks || tracks.length === 0) return null;\n  const lastTrack = localStorage.getItem('lastDemoTrack');\n  const pool = tracks.length > 1 ? tracks.filter(t => t.id !== lastTrack) : tracks;\n  const selected = pool[Math.floor(Math.random() * pool.length)];\n  localStorage.setItem('lastDemoTrack', selected.id);\n  return selected;\n};\n\ninterface DemoContextType {\n  isDemoMode: boolean;\n  isAuthenticated: boolean;\n  currentDemoTrack: AudioAsset | null;\n  isLoading: boolean;\n  loadRandomDemoTrack: () => void;\n  trackDemoEvent: (event: string, properties: any) => void;\n  demoTracks: AudioAsset[];\n}\n\nconst DemoContext = createContext<DemoContextType | null>(null);\n\nexport const DemoProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { user } = useAuth();\n  const [currentDemoTrack, setCurrentDemoTrack] = useState<AudioAsset | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [availableDemoTracks, setAvailableDemoTracks] = useState<AudioAsset[]>([]);\n  \n  const isDemoMode = !user;\n  const isAuthenticated = !!user;\n\n  const trackDemoEvent = useCallback((event: string, properties: any) => {\n    if (isDemoMode) {\n      // Track demo-specific events\n      console.log(`Demo event: ${event}`, {\n        ...properties,\n        userTier: 'guest',\n        isDemo: true,\n        timestamp: Date.now()\n      });\n      // TODO: Integrate with analytics service\n    }\n  }, [isDemoMode]);\n\n  const loadRandomDemoTrack = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Ensure we have a pool of guest tracks\n      let pool = availableDemoTracks;\n      if (!pool || pool.length === 0) {\n        const tracks = await LibraryService.getLibraryTracks('guest');\n        pool = tracks.map((t) => ({\n          id: t.id,\n          name: t.name,\n          genre: t.genre,\n          bpm: t.bpm || 0,\n          file: t.file, // public URL from storage\n          type: t.type,\n          size: t.size || 'Unknown'\n        }));\n        setAvailableDemoTracks(pool);\n      }\n\n      const selected = selectRandom(pool);\n      if (selected) {\n        setCurrentDemoTrack(selected);\n        trackDemoEvent('track_loaded', {\n          trackId: selected.id,\n          genre: selected.genre,\n          bpm: selected.bpm\n        });\n      }\n    } catch (error) {\n      console.error('Failed to load demo track:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [availableDemoTracks, trackDemoEvent]);\n  \n  // Preload guest tracks and auto-select when entering demo mode\n  useEffect(() => {\n    const preload = async () => {\n      if (!isDemoMode) return;\n      try {\n        if (!availableDemoTracks || availableDemoTracks.length === 0) {\n          const tracks = await LibraryService.getLibraryTracks('guest');\n          const mapped = tracks.map((t) => ({\n            id: t.id,\n            name: t.name,\n            genre: t.genre,\n            bpm: t.bpm || 0,\n            file: t.file,\n            type: t.type,\n            size: t.size || 'Unknown'\n          }));\n          setAvailableDemoTracks(mapped);\n        }\n        if (!currentDemoTrack) {\n          await loadRandomDemoTrack();\n        }\n      } catch (e) {\n        console.error('Failed to preload guest tracks:', e);\n      }\n    };\n    preload();\n  }, [isDemoMode, currentDemoTrack, availableDemoTracks.length, loadRandomDemoTrack]);\n  \n  const value = {\n    isDemoMode,\n    isAuthenticated,\n    currentDemoTrack,\n    isLoading,\n    loadRandomDemoTrack,\n    trackDemoEvent,\n    demoTracks: availableDemoTracks\n  };\n  \n  return (\n    <DemoContext.Provider value={value}>\n      {children}\n    </DemoContext.Provider>\n  );\n};\n\nexport const useDemo = () => {\n  const context = useContext(DemoContext);\n  if (!context) {\n    throw new Error('useDemo must be used within DemoProvider');\n  }\n  return context;\n};\n\n// Hook for demo mode detection\nexport const useDemoMode = () => {\n  const { user } = useAuth();\n  const isDemoMode = !user;\n  \n  return {\n    isDemoMode,\n    isAuthenticated: !!user\n  };\n}; ","import React, { useEffect } from 'react';\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ \n  isOpen, \n  onClose, \n  children, \n  className = '' \n}) => {\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm\"\n        onClick={onClose}\n        data-testid=\"modal-backdrop\"\n      />\n      \n      {/* Modal Content */}\n      <div \n        className={`relative bg-audafact-surface-1 border border-audafact-divider rounded-card shadow-card max-w-md w-11/12 max-h-[90vh] overflow-y-auto ${className}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}; ","import { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { supabase } from '../services/supabase';\nimport { UserTier, FeatureAccess, UsageLimits } from '../types/music';\n\n// Tier configurations as specified in PRD 2\nconst GUEST_FEATURES: FeatureAccess = {\n  canUpload: false,\n  canSaveSession: false,\n  canRecord: false,\n  canDownload: false,\n  canEditCues: false,\n  canEditLoops: false,\n  canBrowseLibrary: true, // View only\n  canAccessProTracks: false\n};\n\nconst FREE_FEATURES: FeatureAccess = {\n  canUpload: true,\n  canSaveSession: true,\n  canRecord: true,\n  canDownload: false,\n  canEditCues: true,\n  canEditLoops: true,\n  canBrowseLibrary: true,\n  canAccessProTracks: false\n};\n\nconst PRO_FEATURES: FeatureAccess = {\n  canUpload: true,\n  canSaveSession: true,\n  canRecord: true,\n  canDownload: true,\n  canEditCues: true,\n  canEditLoops: true,\n  canBrowseLibrary: true,\n  canAccessProTracks: true\n};\n\nconst GUEST_LIMITS: UsageLimits = {\n  maxUploads: 0,\n  maxSessions: 0,\n  maxRecordings: 0,\n  maxLibraryTracks: 10\n};\n\nconst FREE_LIMITS: UsageLimits = {\n  maxUploads: 3,\n  maxSessions: 2,\n  maxRecordings: 1,\n  maxLibraryTracks: 10\n};\n\nconst PRO_LIMITS: UsageLimits = {\n  maxUploads: Infinity,\n  maxSessions: Infinity,\n  maxRecordings: Infinity,\n  maxLibraryTracks: Infinity\n};\n\nexport const useUserTier = () => {\n  const { user } = useAuth();\n  const [accessTier, setAccessTier] = useState<'free' | 'pro' | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchUserTier = async () => {\n      if (!user) {\n        setAccessTier(null);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        const { data, error: fetchError } = await supabase\n          .from('users')\n          .select('access_tier')\n          .eq('id', user.id)\n          .single();\n\n        if (fetchError) {\n          setError(fetchError.message);\n          setAccessTier('free');\n        } else {\n          setAccessTier(data?.access_tier || 'free');\n        }\n      } catch (err) {\n        setError('Failed to fetch user tier');\n        setAccessTier('free');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserTier();\n  }, [user]);\n\n  const getUserTier = (): UserTier => {\n    if (!user) {\n      return { \n        id: 'guest', \n        name: 'Guest', \n        features: GUEST_FEATURES, \n        limits: GUEST_LIMITS \n      };\n    }\n    \n    if (accessTier === 'pro') {\n      return { \n        id: 'pro', \n        name: 'Pro Creator', \n        features: PRO_FEATURES, \n        limits: PRO_LIMITS \n      };\n    }\n    \n    return { \n      id: 'free', \n      name: 'Free User', \n      features: FREE_FEATURES, \n      limits: FREE_LIMITS \n    };\n  };\n  \n  const tier = getUserTier();\n  \n  return {\n    tier,\n    isGuest: tier.id === 'guest',\n    isFree: tier.id === 'free',\n    isPro: tier.id === 'pro',\n    features: tier.features,\n    limits: tier.limits,\n    loading,\n    error\n  };\n}; ","import { useState, useCallback } from 'react';\n\nexport interface Message {\n  id: string;\n  type: 'success' | 'error' | 'info';\n  message: string;\n  duration?: number;\n}\n\nexport const useMessageSystem = () => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  \n  const showMessage = useCallback((\n    type: 'success' | 'error' | 'info', \n    message: string, \n    duration = 5000\n  ) => {\n    const id = Date.now().toString();\n    const newMessage: Message = { id, type, message, duration };\n    \n    setMessages(prev => [...prev, newMessage]);\n    \n    if (duration > 0) {\n      setTimeout(() => {\n        removeMessage(id);\n      }, duration);\n    }\n  }, []);\n  \n  const removeMessage = useCallback((id: string) => {\n    setMessages(prev => prev.filter(msg => msg.id !== id));\n  }, []);\n  \n  const showSuccessMessage = useCallback((message: string) => {\n    showMessage('success', message);\n  }, [showMessage]);\n  \n  const showErrorMessage = useCallback((message: string) => {\n    showMessage('error', message);\n  }, [showMessage]);\n  \n  const showInfoMessage = useCallback((message: string) => {\n    showMessage('info', message);\n  }, [showMessage]);\n  \n  return {\n    messages,\n    showSuccessMessage,\n    showErrorMessage,\n    showInfoMessage,\n    removeMessage\n  };\n}; ","import { useState, useCallback, useEffect } from 'react';\nimport { PostSignupAction, INTENT_EXPIRY_HOURS, SUCCESS_MESSAGES } from '../types/postSignup';\nimport { IntentManagementService } from '../services/intentManagementService';\nimport { PostSignupActionService } from '../services/postSignupActionService';\nimport { PostSignupFlowHandler } from '../services/postSignupFlowHandler';\nimport { DemoSessionManager } from '../services/demoSessionManager';\nimport { useAuth } from '../context/AuthContext';\nimport { useUserTier } from './useUserTier';\nimport { useMessageSystem } from './useMessageSystem';\n\nexport const usePostSignupActions = () => {\n  const { user } = useAuth();\n  const { tier } = useUserTier();\n  const { showSuccessMessage, showErrorMessage } = useMessageSystem();\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Set up message functions for the services\n  useEffect(() => {\n    PostSignupFlowHandler.setMessageFunctions(showSuccessMessage, showErrorMessage);\n  }, [showSuccessMessage, showErrorMessage]);\n\n  const cacheIntent = useCallback((action: Omit<PostSignupAction, 'id' | 'timestamp'>) => {\n    const intentService = IntentManagementService.getInstance();\n    \n    const fullAction: PostSignupAction = {\n      ...action,\n      id: `intent_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: Date.now(),\n      expiresAt: Date.now() + (INTENT_EXPIRY_HOURS * 60 * 60 * 1000)\n    };\n    \n    intentService.cacheIntent(fullAction);\n    \n    return fullAction.id;\n  }, []);\n\n  const executePendingActions = useCallback(async () => {\n    if (!user || isProcessing) return;\n    \n    setIsProcessing(true);\n    try {\n      await PostSignupActionService.getInstance().executePendingActions(tier.id);\n    } catch (error) {\n      console.error('Failed to execute pending actions:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [user, tier.id, isProcessing]);\n\n  const handleSignupSuccess = useCallback(async (trigger?: string) => {\n    if (!user) return;\n    \n    setIsProcessing(true);\n    try {\n      const handler = new PostSignupFlowHandler();\n      await handler.handleSignupSuccess(user, trigger);\n    } catch (error) {\n      console.error('Failed to handle signup success:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [user]);\n\n  const handleTierUpgrade = useCallback(async (newTier: string) => {\n    if (!user) return;\n    \n    setIsProcessing(true);\n    try {\n      const handler = new PostSignupFlowHandler();\n      await handler.handleTierUpgrade(user, newTier);\n    } catch (error) {\n      console.error('Failed to handle tier upgrade:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [user]);\n\n  const saveDemoState = useCallback((state: any) => {\n    const demoManager = DemoSessionManager.getInstance();\n    demoManager.saveDemoState(state);\n  }, []);\n\n  const restoreDemoState = useCallback(() => {\n    const demoManager = DemoSessionManager.getInstance();\n    return demoManager.restoreDemoState();\n  }, []);\n\n  const clearIntentCache = useCallback(() => {\n    const intentService = IntentManagementService.getInstance();\n    intentService.clearIntentCache();\n  }, []);\n\n  const getIntentCache = useCallback(() => {\n    const intentService = IntentManagementService.getInstance();\n    return intentService.getIntentCache();\n  }, []);\n\n  // Auto-execute pending actions when user signs up\n  useEffect(() => {\n    if (user && tier.id !== 'guest' && !isProcessing) {\n      executePendingActions();\n    }\n  }, [user, tier.id]);\n\n  return {\n    cacheIntent,\n    executePendingActions,\n    handleSignupSuccess,\n    handleTierUpgrade,\n    saveDemoState,\n    restoreDemoState,\n    clearIntentCache,\n    getIntentCache,\n    isProcessing\n  };\n}; ","import { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\n\ninterface GoogleSignInButtonProps {\n  onSuccess?: () => void;\n  onClick?: () => void;\n  isLoading?: boolean;\n  className?: string;\n}\n\nexport const GoogleSignInButton = ({ \n  onSuccess, \n  onClick, \n  isLoading: externalLoading, \n  className = '' \n}: GoogleSignInButtonProps) => {\n  const { signInWithGoogle } = useAuth();\n  const [internalLoading, setInternalLoading] = useState(false);\n  \n  // Use external loading state if provided, otherwise use internal state\n  const isLoading = externalLoading !== undefined ? externalLoading : internalLoading;\n\n  const handleGoogleSignIn = async () => {\n    // If external onClick is provided, call it first\n    if (onClick) {\n      onClick();\n    }\n\n    // Always handle the OAuth flow (whether onClick was provided or not)\n    try {\n      setInternalLoading(true);\n      const result = await signInWithGoogle();\n      if (result.success) {\n        // OAuth redirects to Google, so we don't call onSuccess here\n        // The success will be handled by the callback component\n      }\n    } catch (error) {\n      console.error('Google sign in error:', error);\n      setInternalLoading(false);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleGoogleSignIn}\n      disabled={isLoading}\n      className={`w-full flex items-center justify-center gap-3 px-4 py-2 bg-audafact-surface-2 border border-audafact-divider rounded-lg text-audafact-text-primary hover:bg-audafact-surface-1-enhanced transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed ${className}`}\n    >\n      {isLoading ? (\n        <>\n          <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-audafact-accent-cyan\"></div>\n          <span className=\"font-medium\">Connecting...</span>\n        </>\n      ) : (\n        <>\n          <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n            <path\n              fill=\"#4285F4\"\n              d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n            />\n            <path\n              fill=\"#34A853\"\n              d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n            />\n            <path\n              fill=\"#FBBC05\"\n              d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n            />\n            <path\n              fill=\"#EA4335\"\n              d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n            />\n          </svg>\n          <span className=\"font-medium\">Continue with Google</span>\n        </>\n      )}\n    </button>\n  );\n}; ","import React, { useState, useEffect } from 'react';\nimport { Modal } from './Modal';\nimport { useAuth } from '../context/AuthContext';\nimport { usePostSignupActions } from '../hooks/usePostSignupActions';\nimport { trackEvent } from '../services/analyticsService';\nimport { GoogleSignInButton } from '../auth/GoogleSignInButton';\n\nconst INTENT_EXPIRY_HOURS = 24;\n\ninterface SignupModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  trigger: string;\n}\n\nconst SignupModal: React.FC<SignupModalProps> = ({\n  isOpen,\n  onClose,\n  trigger,\n}) => {\n  const { signIn } = useAuth();\n  const { cacheIntent } = usePostSignupActions();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (isOpen) {\n      trackEvent('signup_modal_shown', {\n        trigger,\n        userTier: 'guest'\n      });\n    }\n  }, [isOpen, trigger]);\n\n  const handleClose = () => {\n    trackEvent('signup_modal_dismissed', {\n      trigger,\n      userTier: 'guest'\n    });\n    onClose();\n  };\n\n  const handleGoogleSignInStart = () => {\n    // Cache the intent if there's a trigger\n    if (trigger) {\n      cacheIntent({\n        type: trigger as any,\n        context: {},\n        priority: 'high',\n        expiresAt: Date.now() + (INTENT_EXPIRY_HOURS * 60 * 60 * 1000)\n      });\n    }\n    \n    trackEvent('signup_completed', {\n      method: 'google',\n      trigger,\n      upgradeRequired: false\n    });\n  };\n\n  const handleEmailSignIn = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Cache the intent if there's a trigger\n      if (trigger) {\n        cacheIntent({\n          type: trigger as any,\n          context: {},\n          priority: 'high',\n          expiresAt: Date.now() + (INTENT_EXPIRY_HOURS * 60 * 60 * 1000)\n        });\n      }\n      \n      await signIn(email, password);\n      trackEvent('signup_completed', {\n        method: 'email',\n        trigger,\n        upgradeRequired: false\n      });\n      \n      onClose();\n    } catch (error) {\n      setError('Failed to sign in with email');\n      trackEvent('signup_error', {\n        trigger,\n        error: 'email_signin_failed'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getTriggerMessage = () => {\n    switch (trigger) {\n      case 'add_library_track':\n        return 'Add tracks to your studio';\n      case 'save_session':\n        return 'Save your session';\n      case 'upload':\n        return 'Upload your own tracks';\n      case 'record':\n        return 'Record your performance';\n      case 'download':\n        return 'Download your tracks';\n      case 'custom_cue_points':\n        return 'Set custom cue points';\n      default:\n        return 'Access premium features';\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={handleClose}>\n      <div className=\"p-6\">\n        <div className=\"text-center mb-6\">\n          <h2 className=\"text-2xl font-bold audafact-heading mb-2\">\n            Unlock {getTriggerMessage()}\n          </h2>\n          <p className=\"audafact-text-secondary\">\n            Sign up to access all features and start creating amazing music\n          </p>\n        </div>\n\n        {error && (\n          <div className=\"bg-audafact-alert-red text-audafact-text-primary p-3 rounded-lg mb-4\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"space-y-4\">\n          <GoogleSignInButton onClick={handleGoogleSignInStart} />\n\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-audafact-divider\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-audafact-surface-1 audafact-text-secondary\">Or continue with email</span>\n            </div>\n          </div>\n\n          <form onSubmit={handleEmailSignIn} className=\"space-y-4\">\n            <input\n              type=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full bg-audafact-surface-2 border border-audafact-divider text-audafact-text-primary px-4 py-3 rounded-lg focus:outline-none focus:border-audafact-accent-cyan placeholder-audafact-text-secondary\"\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full bg-audafact-surface-2 border border-audafact-divider text-audafact-text-primary px-4 py-3 rounded-lg focus:outline-none focus:border-audafact-accent-cyan placeholder-audafact-text-secondary\"\n              required\n            />\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full audafact-button-primary py-3 px-4 disabled:opacity-50\"\n            >\n              {isLoading ? 'Signing in...' : 'Sign up with Email'}\n            </button>\n          </form>\n        </div>\n\n        <div className=\"mt-6 text-center\">\n          <p className=\"text-sm audafact-text-secondary\">\n            By signing up, you agree to our Terms of Service and Privacy Policy\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SignupModal; ","import { useState, useEffect } from 'react';\nimport { trackEvent } from '../services/analyticsService';\n\ninterface SignupModalState {\n  isOpen: boolean;\n  trigger: string;\n  action?: string;\n}\n\nexport const useSignupModal = () => {\n  const [modalState, setModalState] = useState<SignupModalState>({\n    isOpen: false,\n    trigger: '',\n    action: undefined\n  });\n\n  // Remove the event listener from the hook since GlobalModalManager handles it\n\n  const showSignupModal = (trigger: string, action?: string) => {\n    setModalState({\n      isOpen: true,\n      trigger,\n      action\n    });\n    \n    trackEvent('signup_modal_shown', {\n      trigger,\n      userTier: 'guest'\n    });\n  };\n\n  const closeSignupModal = () => {\n    setModalState(prev => ({\n      ...prev,\n      isOpen: false\n    }));\n    \n    trackEvent('signup_modal_dismissed', {\n      trigger: modalState.trigger,\n      userTier: 'guest'\n    });\n  };\n\n  return {\n    modalState,\n    showSignupModal,\n    closeSignupModal\n  };\n};\n\n// Global function for triggering signup modal from anywhere\nexport const showSignupModal = (trigger: string, action?: string) => {\n  window.dispatchEvent(new CustomEvent('showSignupModal', {\n    detail: { trigger, action }\n  }));\n}; ","import React from 'react';\nimport { Message } from '../hooks/useMessageSystem';\n\ninterface MessageDisplayProps {\n  messages: Message[];\n  onRemove: (id: string) => void;\n}\n\nexport const MessageDisplay: React.FC<MessageDisplayProps> = ({ messages, onRemove }) => {\n  const getMessageStyles = (type: Message['type']) => {\n    switch (type) {\n      case 'success':\n        return 'bg-green-50 border-green-200 text-green-800';\n      case 'error':\n        return 'bg-red-50 border-red-200 text-red-800';\n      case 'info':\n        return 'bg-blue-50 border-blue-200 text-blue-800';\n      default:\n        return 'bg-gray-50 border-gray-200 text-gray-800';\n    }\n  };\n\n  const getIcon = (type: Message['type']) => {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'error':\n        return '❌';\n      case 'info':\n        return 'ℹ️';\n      default:\n        return '💬';\n    }\n  };\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {messages.map((message) => (\n        <div\n          key={message.id}\n          className={`flex items-center p-4 rounded-lg border shadow-lg max-w-sm transition-all duration-300 ${getMessageStyles(message.type)}`}\n        >\n          <span className=\"mr-3 text-lg\">{getIcon(message.type)}</span>\n          <span className=\"flex-1 text-sm font-medium\">{message.message}</span>\n          <button\n            onClick={() => onRemove(message.id)}\n            className=\"ml-3 text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ✕\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}; ","import React, { useEffect } from 'react';\nimport SignupModal from './SignupModal';\nimport { useSignupModal } from '../hooks/useSignupModal';\nimport { useMessageSystem } from '../hooks/useMessageSystem';\nimport { MessageDisplay } from './MessageDisplay';\nimport { usePostSignupActions } from '../hooks/usePostSignupActions';\n\nexport const GlobalModalManager: React.FC = () => {\n  const { \n    modalState, \n    showSignupModal, \n    closeSignupModal \n  } = useSignupModal();\n  \n  const { messages, showSuccessMessage, removeMessage } = useMessageSystem();\n  \n  // Handle post-signup actions\n  usePostSignupActions();\n  \n  useEffect(() => {\n    const handleShowSignupModal = (event: CustomEvent) => {\n      const { trigger, action } = event.detail;\n      showSignupModal(trigger, action);\n    };\n    \n    const handlePostSignupAction = (event: CustomEvent) => {\n      const { action } = event.detail;\n      \n      // Handle different post-signup actions\n      switch (action) {\n        case 'upload':\n          showSuccessMessage('🎉 Welcome! You can now upload your own tracks.');\n          break;\n          \n        case 'save_session':\n          showSuccessMessage('💾 Session saved! You can now save unlimited sessions.');\n          break;\n          \n        case 'add_library_track':\n          showSuccessMessage('🎵 Browse our full library and add tracks to your studio!');\n          break;\n          \n        case 'edit_cues':\n          showSuccessMessage('🎯 You can now customize cue points!');\n          break;\n          \n        case 'edit_loops':\n          showSuccessMessage('🔄 You can now set custom loops!');\n          break;\n          \n        case 'record':\n          showSuccessMessage('🎙️ You can now record your performances! (1 free recording available)');\n          break;\n          \n        case 'download':\n          showSuccessMessage('💿 Upgrade to Pro Creator to download your work!');\n          break;\n          \n        default:\n          showSuccessMessage('🎉 Welcome to Audafact! Start creating your mixes.');\n      }\n    };\n    \n    // Listen for global modal events\n    window.addEventListener('showSignupModal', handleShowSignupModal as EventListener);\n    window.addEventListener('postSignupAction', handlePostSignupAction as EventListener);\n    \n    return () => {\n      window.removeEventListener('showSignupModal', handleShowSignupModal as EventListener);\n      window.removeEventListener('postSignupAction', handlePostSignupAction as EventListener);\n    };\n  }, [showSignupModal, showSuccessMessage]);\n  \n  return (\n    <>\n      {/* Signup Modal */}\n      <SignupModal\n        isOpen={modalState.isOpen}\n        onClose={closeSignupModal}\n        trigger={modalState.trigger}\n      />\n      \n      {/* Message Display */}\n      <MessageDisplay \n        messages={messages} \n        onRemove={removeMessage} \n      />\n    </>\n  );\n}; ","import React, { useState, useEffect } from 'react';\nimport { SuccessMessage as SuccessMessageType } from '../types/postSignup';\n\ninterface SuccessMessageProps {\n  message: SuccessMessageType;\n  onClose: () => void;\n}\n\nconst SuccessMessage: React.FC<SuccessMessageProps> = ({ message, onClose }) => {\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false);\n      setTimeout(onClose, 300); // Allow animation to complete\n    }, message.duration);\n    \n    return () => clearTimeout(timer);\n  }, [message.duration, onClose]);\n  \n  return (\n    <div className={`success-message ${isVisible ? 'visible' : 'hidden'}`}>\n      <div className=\"success-content\">\n        <div className=\"success-icon\">{message.icon}</div>\n        <div className=\"success-text\">\n          <h4>{message.title}</h4>\n          <p>{message.message}</p>\n        </div>\n        <button className=\"close-button\" onClick={onClose}>\n          ✕\n        </button>\n      </div>\n      \n      {message.actions && (\n        <div className=\"success-actions\">\n          {message.actions.map((action, index) => (\n            <button\n              key={index}\n              className={`action-button ${action.variant}`}\n              onClick={action.action}\n            >\n              {action.label}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SuccessMessage; ","import React, { useState, useEffect } from 'react';\nimport { useMessageSystem } from '../hooks/useMessageSystem';\nimport SuccessMessage from './SuccessMessage';\n\nconst SuccessMessageManager: React.FC = () => {\n  const { messages } = useMessageSystem();\n  const [successMessages, setSuccessMessages] = useState<Array<{\n    id: string;\n    message: any;\n  }>>([]);\n\n  // Convert regular messages to success message format\n  useEffect(() => {\n    const newSuccessMessages = messages\n      .filter(msg => msg.type === 'success')\n      .map(msg => ({\n        id: msg.id,\n        message: {\n          id: msg.id,\n          title: 'Success',\n          message: msg.message,\n          icon: '✅',\n          duration: msg.duration || 5000\n        }\n      }));\n\n    setSuccessMessages(newSuccessMessages);\n  }, [messages]);\n\n  const removeMessage = (id: string) => {\n    setSuccessMessages(prev => prev.filter(msg => msg.id !== id));\n  };\n\n  return (\n    <>\n      {successMessages.map(({ id, message }) => (\n        <SuccessMessage\n          key={id}\n          message={message}\n          onClose={() => removeMessage(id)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default SuccessMessageManager; ","export interface ErrorContext {\n  // User context\n  userId?: string;\n  userTier: string;\n  sessionId: string;\n  \n  // Application context\n  currentRoute: string;\n  componentStack: string;\n  featureGates: string[];\n  \n  // Browser context\n  userAgent: string;\n  screenSize: string;\n  viewportSize: string;\n  \n  // Performance context\n  memoryUsage?: number;\n  networkStatus: string;\n  \n  // Custom context\n  customContext: Record<string, any>;\n}\n\nexport interface ErrorEvent {\n  id: string;\n  message: string;\n  stack: string;\n  type: 'error' | 'unhandledrejection' | 'custom';\n  timestamp: number;\n  context: ErrorContext;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  fingerprint: string;\n}\n\nexport class ErrorMonitor {\n  private static instance: ErrorMonitor;\n  private errors: ErrorEvent[] = [];\n  private analytics: any; // Will be imported from analyticsService\n  private maxErrors = 50;\n  \n  private constructor() {\n    this.setupGlobalHandlers();\n  }\n  \n  static getInstance(): ErrorMonitor {\n    if (!ErrorMonitor.instance) {\n      ErrorMonitor.instance = new ErrorMonitor();\n    }\n    return ErrorMonitor.instance;\n  }\n  \n  private setupGlobalHandlers(): void {\n    // Global error handler\n    window.addEventListener('error', (event) => {\n      this.captureError(event.error, 'global', {\n        filename: event.filename,\n        lineno: event.lineno,\n        colno: event.colno\n      });\n    });\n    \n    // Unhandled promise rejection handler\n    window.addEventListener('unhandledrejection', (event) => {\n      this.captureError(new Error(event.reason), 'unhandled_promise', {\n        promise: event.promise\n      });\n    });\n    \n    // React error boundary fallback\n    if (typeof window !== 'undefined') {\n      (window as any).__REACT_ERROR_BOUNDARY__ = (error: Error, errorInfo: any) => {\n        this.captureError(error, 'react_boundary', {\n          componentStack: errorInfo.componentStack\n        });\n      };\n    }\n  }\n  \n  captureError(\n    error: Error, \n    context: string, \n    additionalContext: Record<string, any> = {}\n  ): void {\n    const errorEvent: ErrorEvent = {\n      id: this.generateErrorId(),\n      message: error.message,\n      stack: error.stack || '',\n      type: 'error',\n      timestamp: Date.now(),\n      context: this.buildErrorContext(context, additionalContext),\n      severity: this.determineSeverity(error, context),\n      fingerprint: this.generateFingerprint(error, context)\n    };\n    \n    // Store error locally\n    this.storeError(errorEvent);\n    \n    // Send to analytics if available\n    if (this.analytics) {\n      this.analytics.track('error_captured', errorEvent);\n    }\n    \n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('Error captured:', errorEvent);\n    }\n  }\n  \n  captureCustomError(\n    message: string,\n    context: string,\n    severity: 'low' | 'medium' | 'high' | 'critical' = 'medium',\n    additionalContext: Record<string, any> = {}\n  ): void {\n    const errorEvent: ErrorEvent = {\n      id: this.generateErrorId(),\n      message,\n      stack: new Error().stack || '',\n      type: 'custom',\n      timestamp: Date.now(),\n      context: this.buildErrorContext(context, additionalContext),\n      severity,\n      fingerprint: this.generateFingerprint(new Error(message), context)\n    };\n    \n    this.storeError(errorEvent);\n    if (this.analytics) {\n      this.analytics.track('custom_error', errorEvent);\n    }\n  }\n  \n  private buildErrorContext(\n    context: string, \n    additionalContext: Record<string, any>\n  ): ErrorContext {\n    return {\n      userId: this.getCurrentUserId(),\n      userTier: this.getCurrentUserTier(),\n      sessionId: this.getSessionId(),\n      currentRoute: window.location.pathname,\n      componentStack: additionalContext.componentStack || '',\n      featureGates: this.getActiveFeatureGates(),\n      userAgent: navigator.userAgent,\n      screenSize: `${screen.width}x${screen.height}`,\n      viewportSize: `${window.innerWidth}x${window.innerHeight}`,\n      memoryUsage: (performance as any).memory?.usedJSHeapSize,\n      networkStatus: navigator.onLine ? 'online' : 'offline',\n      customContext: additionalContext\n    };\n  }\n  \n  private determineSeverity(error: Error, context: string): 'low' | 'medium' | 'high' | 'critical' {\n    // Critical errors\n    if (error.message.includes('Failed to fetch') || \n        error.message.includes('NetworkError') ||\n        error.message.includes('QuotaExceededError')) {\n      return 'critical';\n    }\n    \n    // High severity errors\n    if (error.message.includes('AudioContext') ||\n        error.message.includes('WebAudio') ||\n        context === 'react_boundary') {\n      return 'high';\n    }\n    \n    // Medium severity errors\n    if (error.message.includes('localStorage') ||\n        error.message.includes('IndexedDB')) {\n      return 'medium';\n    }\n    \n    return 'low';\n  }\n  \n  private generateFingerprint(error: Error, context: string): string {\n    const fingerprint = `${error.message}:${context}:${this.getCurrentUserTier()}`;\n    return this.hashString(fingerprint);\n  }\n  \n  private hashString(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash).toString(36);\n  }\n  \n  private generateErrorId(): string {\n    return `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n  \n  private storeError(error: ErrorEvent): void {\n    this.errors.push(error);\n    \n    // Keep only the most recent errors\n    if (this.errors.length > this.maxErrors) {\n      this.errors = this.errors.slice(-this.maxErrors);\n    }\n    \n    // Store in localStorage\n    try {\n      localStorage.setItem('error_log', JSON.stringify(this.errors));\n    } catch (error) {\n      console.error('Failed to store error in localStorage:', error);\n    }\n  }\n  \n  private getCurrentUserId(): string | undefined {\n    return localStorage.getItem('user_id') || undefined;\n  }\n  \n  private getCurrentUserTier(): string {\n    return localStorage.getItem('user_tier') || 'guest';\n  }\n  \n  private getSessionId(): string {\n    return localStorage.getItem('session_id') || `session_${Date.now()}`;\n  }\n  \n  private getActiveFeatureGates(): string[] {\n    try {\n      const gates = JSON.parse(localStorage.getItem('active_feature_gates') || '[]');\n      return gates;\n    } catch (error) {\n      return [];\n    }\n  }\n  \n  getErrors(): ErrorEvent[] {\n    return [...this.errors];\n  }\n  \n  clearErrors(): void {\n    this.errors = [];\n    try {\n      localStorage.removeItem('error_log');\n    } catch (error) {\n      console.error('Failed to clear errors:', error);\n    }\n  }\n  \n  getErrorRate(): number {\n    const now = Date.now();\n    const oneHour = 60 * 60 * 1000;\n    const recentErrors = this.errors.filter(error => \n      now - error.timestamp < oneHour\n    );\n    return recentErrors.length;\n  }\n  \n  // Set analytics service reference\n  setAnalyticsService(analytics: any): void {\n    this.analytics = analytics;\n  }\n} ","import React from 'react';\nimport { ErrorMonitor } from '../services/errorMonitor';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n  errorInfo?: any;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<{ error?: Error; resetError: () => void }>;\n}\n\nexport class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  \n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n  \n  componentDidCatch(error: Error, errorInfo: any): void {\n    const errorMonitor = ErrorMonitor.getInstance();\n    errorMonitor.captureError(error, 'react_boundary', {\n      componentStack: errorInfo.componentStack\n    });\n  }\n  \n  resetError = (): void => {\n    this.setState({ hasError: false, error: undefined, errorInfo: undefined });\n  };\n  \n  render(): React.ReactNode {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;\n        return <FallbackComponent error={this.state.error} resetError={this.resetError} />;\n      }\n      \n      return (\n        <div className=\"error-boundary\">\n          <div className=\"error-boundary-content\">\n            <h2>Something went wrong</h2>\n            <p>We've been notified and are working to fix this issue.</p>\n            <button \n              onClick={this.resetError}\n              className=\"error-boundary-button\"\n            >\n              Try Again\n            </button>\n            <button \n              onClick={() => window.location.reload()}\n              className=\"error-boundary-button secondary\"\n            >\n              Reload Page\n            </button>\n          </div>\n        </div>\n      );\n    }\n    \n    return this.props.children;\n  }\n}\n\n// Default fallback component\nexport const DefaultErrorFallback: React.FC<{ \n  error?: Error; \n  resetError: () => void \n}> = ({ error, resetError }) => {\n  return (\n    <div className=\"error-boundary\">\n      <div className=\"error-boundary-content\">\n        <h2>Something went wrong</h2>\n        <p>We've been notified and are working to fix this issue.</p>\n        {error && process.env.NODE_ENV === 'development' && (\n          <details className=\"error-details\">\n            <summary>Error Details (Development)</summary>\n            <pre>{error.message}</pre>\n            <pre>{error.stack}</pre>\n          </details>\n        )}\n        <div className=\"error-actions\">\n          <button onClick={resetError} className=\"error-boundary-button\">\n            Try Again\n          </button>\n          <button \n            onClick={() => window.location.reload()} \n            className=\"error-boundary-button secondary\"\n          >\n            Reload Page\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useEffect } from 'react';\nimport { X, RefreshCw, AlertTriangle, CheckCircle, Clock } from 'lucide-react';\n\ninterface PerformanceDashboardProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const PerformanceDashboard: React.FC<PerformanceDashboardProps> = ({ isOpen, onClose }) => {\n  const [metrics, setMetrics] = useState<any[]>([]);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [pendingEvents, setPendingEvents] = useState(0);\n  const [isOnline, setIsOnline] = useState(true);\n  const [lastError, setLastError] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      const { EnhancedAnalyticsService } = await import('../services/enhancedAnalyticsService');\n      const analytics = EnhancedAnalyticsService.getInstance();\n      const healthStatus = analytics.getHealthStatus();\n      \n      setMetrics(healthStatus.performanceMetrics);\n      setErrors(analytics.getErrors());\n      setPendingEvents(healthStatus.pendingEvents);\n      setIsOnline(healthStatus.isOnline);\n      setLastError(healthStatus.lastError);\n    } catch (error) {\n      console.warn('Failed to load performance data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      loadData();\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-audafact-surface-1 rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-hidden\">\n        <div className=\"flex items-center justify-between p-6 border-b border-audafact-divider\">\n          <h2 className=\"text-xl font-semibold audafact-heading\">Performance Dashboard</h2>\n          <div className=\"flex items-center gap-2\">\n            <button\n              onClick={loadData}\n              disabled={loading}\n              className=\"p-2 text-audafact-text-secondary hover:text-audafact-accent-cyan hover:bg-audafact-surface-2 rounded-lg transition-colors duration-200 disabled:opacity-50\"\n            >\n              <RefreshCw className={`w-5 h-5 ${loading ? 'animate-spin' : ''}`} />\n            </button>\n            <button\n              onClick={onClose}\n              className=\"p-2 text-audafact-text-secondary hover:text-audafact-accent-cyan hover:bg-audafact-surface-2 rounded-lg transition-colors duration-200\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-80px)]\">\n          {/* Status Overview */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"p-4 audafact-card-enhanced\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Clock className=\"w-5 h-5 text-audafact-accent-cyan\" />\n                <span className=\"font-medium\">Metrics</span>\n              </div>\n              <p className=\"text-2xl font-bold\">{metrics.length}</p>\n            </div>\n            \n            <div className=\"p-4 audafact-card-enhanced\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n                <span className=\"font-medium\">Errors</span>\n              </div>\n              <p className=\"text-2xl font-bold\">{errors.length}</p>\n            </div>\n            \n            <div className=\"p-4 audafact-card-enhanced\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <RefreshCw className=\"w-5 h-5 text-yellow-500\" />\n                <span className=\"font-medium\">Pending</span>\n              </div>\n              <p className=\"text-2xl font-bold\">{pendingEvents}</p>\n            </div>\n            \n            <div className=\"p-4 audafact-card-enhanced\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                {isOnline ? (\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                ) : (\n                  <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n                )}\n                <span className=\"font-medium\">Network</span>\n              </div>\n              <p className=\"text-2xl font-bold\">{isOnline ? 'Online' : 'Offline'}</p>\n            </div>\n          </div>\n\n          {/* Performance Metrics */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-semibold audafact-heading mb-4\">Performance Metrics</h3>\n            <div className=\"space-y-2\">\n              {metrics.slice(0, 10).map((metric, index) => (\n                <div key={index} className=\"p-3 audafact-card-enhanced\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-medium\">{metric.metric}</span>\n                    <span className=\"text-audafact-accent-cyan\">{metric.value}</span>\n                  </div>\n                  <div className=\"text-sm text-audafact-text-secondary mt-1\">\n                    {new Date(metric.timestamp).toLocaleTimeString()}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Recent Errors */}\n          {errors.length > 0 && (\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold audafact-heading mb-4\">Recent Errors</h3>\n              <div className=\"space-y-2\">\n                {errors.slice(0, 5).map((error, index) => (\n                  <div key={index} className=\"p-3 audafact-card-enhanced border-l-4 border-red-500\">\n                    <div className=\"font-medium text-red-500\">{error.message}</div>\n                    <div className=\"text-sm text-audafact-text-secondary mt-1\">{error.context}</div>\n                    <div className=\"text-xs text-audafact-text-secondary mt-1\">\n                      {new Date(error.timestamp).toLocaleTimeString()}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import { Link, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { useSidePanel } from '../context/SidePanelContext';\nimport { useState } from 'react';\nimport { PerformanceDashboard } from './PerformanceDashboard';\n\nconst Navbar = () => {\n  const { user, loading, signOut } = useAuth();\n  const { isOpen: isSidePanelOpen, toggleSidePanel } = useSidePanel();\n  const location = useLocation();\n  const isStudioPage = location.pathname === '/studio';\n  const [showPerformanceDashboard, setShowPerformanceDashboard] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  return (\n    <nav className=\"sticky top-0 bg-audafact-surface-1 border-b border-audafact-divider shadow-card z-50\">\n      <div className=\"w-full px-4 md:px-8\">\n        <div className=\"flex items-center h-14 md:h-16 relative\">\n          {/* Left side: Hamburger menu and Logo/Brand */}\n          <div className=\"flex items-center gap-3 md:gap-4\">\n            {/* Hamburger Menu Button - Show on studio page for all users */}\n            {isStudioPage && (\n              <button\n                onClick={toggleSidePanel}\n                className=\"p-2 text-audafact-text-secondary hover:text-audafact-accent-cyan hover:bg-audafact-surface-2 rounded-lg transition-colors duration-200\"\n                aria-label={isSidePanelOpen ? 'Close sidebar' : 'Open sidebar'}\n                data-testid=\"side-panel-toggle\"\n              >\n                {isSidePanelOpen ? (\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                  </svg>\n                ) : (\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                  </svg>\n                )}\n              </button>\n            )}\n            \n\n            \n            <Link to=\"/\" className=\"flex items-center gap-2\">\n              {/* Favicon */}\n              <img \n                src=\"/favicon.svg\" \n                alt=\"Audafact Logo\" \n                className=\"w-7 h-7 md:w-8 md:h-8\"\n              />\n              <span className=\"text-lg md:text-xl font-poppins font-bold\">Audafact</span>\n            </Link>\n          </div>\n\n          {/* Navigation Links - Absolutely Centered (show on lg+ to avoid overlap on tablet portrait) */}\n          <div className=\"hidden lg:flex space-x-8 absolute left-1/2 transform -translate-x-1/2\">\n            {!user && (\n              <Link \n                to=\"/\" \n                className={`font-medium transition-colors duration-200 ${\n                  location.pathname === '/' \n                    ? 'text-audafact-accent-cyan' \n                    : 'text-audafact-text-secondary hover:text-audafact-text-primary'\n                }`}\n              >\n                Home\n              </Link>\n            )}\n            <Link \n              to=\"/studio\" \n              className={`font-medium transition-colors duration-200 ${\n                location.pathname === '/studio' \n                  ? 'text-audafact-accent-cyan' \n                  : 'text-audafact-text-secondary hover:text-audafact-text-primary'\n              }`}\n            >\n              Studio\n            </Link>\n            <Link \n              to=\"/pricing\" \n              className={`font-medium transition-colors duration-200 ${\n                location.pathname === '/pricing' \n                  ? 'text-audafact-accent-cyan' \n                  : 'text-audafact-text-secondary hover:text-audafact-text-primary'\n              }`}\n            >\n              Pricing\n            </Link>\n          </div>\n\n          {/* Auth Section */}\n          <div className=\"flex items-center space-x-2 md:space-x-4 ml-auto\">\n            {/* Performance Dashboard Button - Only show in development */}\n            {process.env.NODE_ENV === 'development' && (\n              <button\n                onClick={() => setShowPerformanceDashboard(true)}\n                className=\"p-2 text-audafact-text-secondary hover:text-audafact-accent-cyan hover:bg-audafact-surface-2 rounded-lg transition-colors duration-200\"\n                aria-label=\"Performance Dashboard\"\n                title=\"Performance Dashboard\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </button>\n            )}\n            \n            {!loading && (\n              user ? (\n                <div className=\"flex items-center space-x-2 md:space-x-4\">\n                  <Link\n                    to=\"/profile\"\n                    className=\"hidden sm:inline text-audafact-text-secondary hover:text-audafact-text-primary transition-colors duration-200 text-sm\"\n                  >\n                    Profile\n                  </Link>\n                  <span className=\"hidden md:inline text-audafact-text-secondary text-sm\">\n                    {user.email}\n                  </span>\n                  <button\n                    onClick={signOut}\n                    className=\"text-audafact-text-secondary hover:text-audafact-text-primary transition-colors duration-200\"\n                  >\n                    Sign Out\n                  </button>\n                </div>\n              ) : (\n                <Link\n                  to=\"/auth\"\n                  className=\"audafact-button-primary px-3 py-1.5 md:px-4 md:py-2\"\n                >\n                  Sign In\n                </Link>\n              )\n            )}\n\n            {/* Mobile menu toggle (shown on < lg) */}\n            <button\n              onClick={() => setIsMobileMenuOpen((prev) => !prev)}\n              className=\"p-2 rounded-lg lg:hidden text-audafact-text-secondary hover:text-audafact-accent-cyan hover:bg-audafact-surface-2 transition-colors duration-200\"\n              aria-label=\"Toggle navigation menu\"\n              aria-expanded={isMobileMenuOpen}\n              aria-controls=\"mobile-nav\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile dropdown menu */}\n      <div\n        id=\"mobile-nav\"\n        className={`${isMobileMenuOpen ? 'block' : 'hidden'} lg:hidden border-t border-audafact-divider bg-audafact-surface-1`}\n      >\n        <div className=\"px-4 py-3 space-y-2\">\n          {!user && (\n            <Link\n              to=\"/\"\n              onClick={() => setIsMobileMenuOpen(false)}\n              className={`block px-2 py-2 rounded-lg transition-colors duration-200 ${\n                location.pathname === '/'\n                  ? 'text-audafact-accent-cyan bg-audafact-surface-2'\n                  : 'text-audafact-text-secondary hover:text-audafact-text-primary hover:bg-audafact-surface-2'\n              }`}\n            >\n              Home\n            </Link>\n          )}\n          <Link\n            to=\"/studio\"\n            onClick={() => setIsMobileMenuOpen(false)}\n            className={`block px-2 py-2 rounded-lg transition-colors duration-200 ${\n              location.pathname === '/studio'\n                ? 'text-audafact-accent-cyan bg-audafact-surface-2'\n                : 'text-audafact-text-secondary hover:text-audafact-text-primary hover:bg-audafact-surface-2'\n            }`}\n          >\n            Studio\n          </Link>\n          <Link\n            to=\"/pricing\"\n            onClick={() => setIsMobileMenuOpen(false)}\n            className={`block px-2 py-2 rounded-lg transition-colors duration-200 ${\n              location.pathname === '/pricing'\n                ? 'text-audafact-accent-cyan bg-audafact-surface-2'\n                : 'text-audafact-text-secondary hover:text-audafact-text-primary hover:bg-audafact-surface-2'\n            }`}\n          >\n            Pricing\n          </Link>\n\n          {/* Account section */}\n          {!loading && (\n            user ? (\n              <div className=\"pt-2 mt-2 border-t border-audafact-divider\">\n                <Link\n                  to=\"/profile\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"block px-2 py-2 rounded-lg text-audafact-text-secondary hover:text-audafact-text-primary hover:bg-audafact-surface-2 transition-colors duration-200\"\n                >\n                  Profile\n                </Link>\n                <button\n                  onClick={() => { setIsMobileMenuOpen(false); signOut(); }}\n                  className=\"w-full text-left px-2 py-2 rounded-lg text-audafact-text-secondary hover:text-audafact-text-primary hover:bg-audafact-surface-2 transition-colors duration-200\"\n                >\n                  Sign Out\n                </button>\n              </div>\n            ) : (\n              <div className=\"pt-2 mt-2 border-t border-audafact-divider\">\n                <Link\n                  to=\"/auth\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"block px-2 py-2 rounded-lg bg-audafact-accent-blue text-audafact-text-primary text-center font-medium hover:bg-opacity-90 transition-colors duration-200\"\n                >\n                  Sign In\n                </Link>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n      \n      {/* Performance Dashboard Modal */}\n      <PerformanceDashboard \n        isOpen={showPerformanceDashboard}\n        onClose={() => setShowPerformanceDashboard(false)}\n      />\n    </nav>\n  );\n};\n\nexport default Navbar; ","import { Outlet } from 'react-router-dom';\nimport Navbar from './Navbar';\n\nconst Layout = () => {\n  return (\n    <div className=\"min-h-screen bg-audafact-surface-1\">\n      <Navbar />\n      <main className=\"container mx-auto px-4 py-0\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n\nexport default Layout; ","import { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { GoogleSignInButton } from './GoogleSignInButton';\n\ninterface AuthFormProps {\n  mode: 'signin' | 'signup';\n  onSuccess?: () => void;\n}\n\nexport const AuthForm = ({ mode, onSuccess }: AuthFormProps) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  const { signIn, signUp } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setMessage('');\n\n    // Validation\n    if (!email || !password) {\n      setError('Please fill in all fields');\n      setLoading(false);\n      return;\n    }\n\n    if (mode === 'signup' && password !== confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n\n    if (mode === 'signup' && password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const result = mode === 'signin' \n        ? await signIn(email, password)\n        : await signUp(email, password);\n\n      if (result.success) {\n        setMessage(mode === 'signin' ? 'Signed in successfully!' : 'Account created! Please check your email to verify your account.');\n        if (onSuccess) {\n          onSuccess();\n        }\n      } else {\n        setError(result.error || 'An error occurred');\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 audafact-card-enhanced\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center audafact-heading\">\n        {mode === 'signin' ? 'Sign In' : 'Sign Up'}\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium audafact-text-secondary mb-1\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full px-3 py-2 bg-audafact-surface-2 border border-audafact-divider rounded-lg focus:outline-none focus:ring-2 focus:ring-audafact-accent-cyan focus:border-audafact-accent-cyan text-audafact-text-primary placeholder-audafact-text-secondary\"\n            placeholder=\"Enter your email\"\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"password\" className=\"block text-sm font-medium audafact-text-secondary mb-1\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full px-3 py-2 bg-audafact-surface-2 border border-audafact-divider rounded-lg focus:outline-none focus:ring-2 focus:ring-audafact-accent-cyan focus:border-audafact-accent-cyan text-audafact-text-primary placeholder-audafact-text-secondary\"\n            placeholder=\"Enter your password\"\n            required\n          />\n        </div>\n\n        {mode === 'signup' && (\n          <div>\n            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium audafact-text-secondary mb-1\">\n              Confirm Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              className=\"w-full px-3 py-2 bg-audafact-surface-2 border border-audafact-divider rounded-lg focus:outline-none focus:ring-2 focus:ring-audafact-accent-cyan focus:border-audafact-accent-cyan text-audafact-text-primary placeholder-audafact-text-secondary\"\n              placeholder=\"Confirm your password\"\n              required\n            />\n          </div>\n        )}\n\n        {error && (\n          <div className=\"text-audafact-alert-red text-sm bg-audafact-surface-2 border border-audafact-alert-red p-3 rounded-lg\">\n            {error}\n          </div>\n        )}\n\n        {message && (\n          <div className=\"text-audafact-accent-green text-sm bg-audafact-surface-2 border border-audafact-accent-green p-3 rounded-lg\">\n            {message}\n          </div>\n        )}\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full audafact-button-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {loading ? 'Loading...' : mode === 'signin' ? 'Sign In' : 'Sign Up'}\n        </button>\n      </form>\n\n      {/* Divider */}\n      <div className=\"relative my-6\">\n        <div className=\"absolute inset-0 flex items-center\">\n          <div className=\"w-full border-t border-audafact-divider\"></div>\n        </div>\n        <div className=\"relative flex justify-center text-sm\">\n          <span className=\"px-2 bg-audafact-surface-1-enhanced text-audafact-text-secondary\">or</span>\n        </div>\n      </div>\n\n      {/* Google Sign In */}\n      <GoogleSignInButton onSuccess={onSuccess} />\n    </div>\n  );\n}; ","import { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\n\nexport const PasswordReset = () => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  const { resetPassword } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setMessage('');\n\n    if (!email) {\n      setError('Please enter your email address');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const result = await resetPassword(email);\n\n      if (result.success) {\n        setMessage('Password reset email sent! Please check your inbox.');\n        setEmail('');\n      } else {\n        setError(result.error || 'An error occurred');\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 audafact-card-enhanced\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center audafact-heading\">Reset Password</h2>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium audafact-text-secondary mb-1\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full px-3 py-2 bg-audafact-surface-2 border border-audafact-divider rounded-lg focus:outline-none focus:ring-2 focus:ring-audafact-accent-cyan focus:border-audafact-accent-cyan text-audafact-text-primary placeholder-audafact-text-secondary\"\n            placeholder=\"Enter your email\"\n            required\n          />\n        </div>\n\n        {error && (\n          <div className=\"text-audafact-alert-red text-sm bg-audafact-surface-2 border border-audafact-alert-red p-3 rounded-lg\">\n            {error}\n          </div>\n        )}\n\n        {message && (\n          <div className=\"text-audafact-accent-green text-sm bg-audafact-surface-2 border border-audafact-accent-green p-3 rounded-lg\">\n            {message}\n          </div>\n        )}\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"w-full audafact-button-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {loading ? 'Sending...' : 'Send Reset Email'}\n        </button>\n      </form>\n    </div>\n  );\n}; ","import { useState } from 'react';\nimport { AuthForm } from './AuthForm';\nimport { PasswordReset } from './PasswordReset';\n\ntype AuthMode = 'signin' | 'signup' | 'reset';\n\nexport const AuthPage = () => {\n  const [mode, setMode] = useState<AuthMode>('signin');\n\n  const handleAuthSuccess = () => {\n    // Redirect to home page or dashboard\n    window.location.href = '/';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-audafact-surface-1 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <div className=\"flex justify-center mb-4\">\n            <img \n              src=\"/favicon.svg\" \n              alt=\"Audafact Logo\" \n              className=\"w-12 h-12\"\n            />\n          </div>\n          <h1 className=\"text-center text-3xl font-extrabold audafact-heading\">\n            Welcome to Audafact\n          </h1>\n          <p className=\"mt-2 text-center text-sm audafact-text-secondary\">\n            Your music production companion\n          </p>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"flex rounded-lg shadow-sm\">\n          <button\n            onClick={() => setMode('signin')}\n            className={`flex-1 py-2 px-4 text-sm font-medium rounded-l-lg border ${\n              mode === 'signin'\n                ? 'bg-audafact-accent-blue text-audafact-text-primary border-audafact-accent-blue'\n                : 'bg-audafact-surface-2 text-audafact-text-secondary border-audafact-divider hover:bg-audafact-surface-1-enhanced hover:text-audafact-text-primary'\n            }`}\n          >\n            Sign In\n          </button>\n          <button\n            onClick={() => setMode('signup')}\n            className={`flex-1 py-2 px-4 text-sm font-medium border-t border-b border-audafact-divider ${\n              mode === 'signup'\n                ? 'bg-audafact-accent-blue text-audafact-text-primary border-audafact-accent-blue'\n                : 'bg-audafact-surface-2 text-audafact-text-secondary border-audafact-divider hover:bg-audafact-surface-1-enhanced hover:text-audafact-text-primary'\n            }`}\n          >\n            Sign Up\n          </button>\n          <button\n            onClick={() => setMode('reset')}\n            className={`flex-1 py-2 px-4 text-sm font-medium rounded-r-lg border ${\n              mode === 'reset'\n                ? 'bg-audafact-accent-blue text-audafact-text-primary border-audafact-accent-blue'\n                : 'bg-audafact-surface-2 text-audafact-text-secondary border-audafact-divider hover:bg-audafact-surface-1-enhanced hover:text-audafact-text-primary'\n            }`}\n          >\n            Reset\n          </button>\n        </div>\n\n        {/* Auth Content */}\n        <div className=\"mt-8\">\n          {mode === 'reset' ? (\n            <PasswordReset />\n          ) : (\n            <AuthForm \n              mode={mode} \n              onSuccess={handleAuthSuccess}\n            />\n          )}\n        </div>\n\n        {/* Additional Links */}\n        <div className=\"text-center\">\n          {mode === 'signin' && (\n            <div className=\"text-sm\">\n              <span className=\"audafact-text-secondary\">Don't have an account? </span>\n              <button\n                onClick={() => setMode('signup')}\n                className=\"text-audafact-accent-cyan hover:text-audafact-accent-blue font-medium transition-colors duration-200\"\n              >\n                Sign up\n              </button>\n            </div>\n          )}\n          {mode === 'signup' && (\n            <div className=\"text-sm\">\n              <span className=\"audafact-text-secondary\">Already have an account? </span>\n              <button\n                onClick={() => setMode('signin')}\n                className=\"text-audafact-accent-cyan hover:text-audafact-accent-blue font-medium transition-colors duration-200\"\n              >\n                Sign in\n              </button>\n            </div>\n          )}\n          {(mode === 'signin' || mode === 'signup') && (\n            <div className=\"mt-2 text-sm\">\n              <button\n                onClick={() => setMode('reset')}\n                className=\"text-audafact-accent-cyan hover:text-audafact-accent-blue font-medium transition-colors duration-200\"\n              >\n                Forgot your password?\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import { useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { supabase } from '../services/supabase';\n\nexport const AuthCallback = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const handleAuthCallback = async () => {\n      try {\n        // Check if we have authentication data in the hash\n        if (window.location.hash && window.location.hash.includes('access_token')) {\n          // Parse the hash to extract the access token\n          const hashParams = new URLSearchParams(window.location.hash.substring(1));\n          const accessToken = hashParams.get('access_token');\n          const refreshToken = hashParams.get('refresh_token');\n          \n          if (accessToken) {\n            // Set the session manually with the tokens from the hash\n            const { data, error } = await supabase.auth.setSession({\n              access_token: accessToken,\n              refresh_token: refreshToken || '',\n            });\n            \n            if (error) {\n              setError(error.message);\n              setLoading(false);\n              return;\n            }\n\n            if (data.session?.user) {\n              navigate('/studio', { replace: true });\n              return;\n            }\n          }\n        }\n        \n        // If no hash with access token, wait a moment and check for session\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        \n        // Check if we have a session\n        const { data: { session }, error } = await supabase.auth.getSession();\n        \n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (session?.user) {\n          navigate('/studio', { replace: true });\n        } else {\n          // Check for error parameters in URL\n          const errorParam = searchParams.get('error');\n          const errorDescription = searchParams.get('error_description');\n          \n          if (errorParam) {\n            setError(`Authentication failed: ${errorDescription || errorParam}`);\n            setLoading(false);\n            return;\n          }\n          \n          navigate('/auth', { replace: true });\n        }\n      } catch (err) {\n        setError('An unexpected error occurred');\n        setLoading(false);\n      }\n    };\n\n    handleAuthCallback();\n  }, [navigate, searchParams]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-audafact-surface-1 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-audafact-accent-cyan mx-auto mb-4\"></div>\n          <p className=\"audafact-text-secondary\">Completing sign in...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-audafact-surface-1 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-audafact-alert-red mb-4\">\n            <svg className=\"w-12 h-12 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-xl font-semibold audafact-heading mb-2\">Sign In Failed</h2>\n          <p className=\"audafact-text-secondary mb-4\">{error}</p>\n          <button\n            onClick={() => navigate('/auth')}\n            className=\"audafact-button-primary\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n}; ","import { createBrowserRouter } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport Layout from '../components/Layout';\nimport { AuthPage } from '../auth/AuthPage';\nimport { AuthCallback } from '../auth/AuthCallback';\nimport { ProtectedRoute } from '../auth/ProtectedRoute';\n\n// Lazy load views for better performance\nconst Home = lazy(() => import('../views/Home'));\nconst Studio = lazy(() => import('../views/Studio'));\nconst Pricing = lazy(() => import('../views/Pricing').then(module => ({ default: module.Pricing })));\nconst CheckoutResult = lazy(() => import('../views/CheckoutResult').then(module => ({ default: module.CheckoutResult })));\nconst Profile = lazy(() => import('../views/Profile').then(module => ({ default: module.Profile })));\n\n// Loading component for lazy routes\nconst LoadingSpinner = () => (\n  <div className=\"flex items-center justify-center min-h-screen\">\n    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-audafact-accent-cyan\"></div>\n  </div>\n);\n\nexport const router = createBrowserRouter([\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      {\n        index: true,\n        element: (\n          <Suspense fallback={<LoadingSpinner />}>\n            <Home />\n          </Suspense>\n        ),\n      },\n      {\n        path: 'studio',\n        element: (\n          <Suspense fallback={<LoadingSpinner />}>\n            <Studio />\n          </Suspense>\n        ),\n      },\n      {\n        path: 'pricing',\n        element: (\n          <Suspense fallback={<LoadingSpinner />}>\n            <Pricing />\n          </Suspense>\n        ),\n      },\n      {\n        path: 'checkout-result',\n        element: (\n          <Suspense fallback={<LoadingSpinner />}>\n            <CheckoutResult />\n          </Suspense>\n        ),\n      },\n      {\n        path: 'profile',\n        element: (\n          <Suspense fallback={<LoadingSpinner />}>\n            <Profile />\n          </Suspense>\n        ),\n      },\n    ],\n  },\n  {\n    path: '/auth',\n    element: <AuthPage />,\n  },\n  {\n    path: '/auth/callback',\n    element: <AuthCallback />,\n  },\n]); ","import { RouterProvider } from 'react-router-dom';\nimport { AuthProvider } from './context/AuthContext';\nimport { AudioProvider } from './context/AudioContext';\nimport { SidePanelProvider } from './context/SidePanelContext';\nimport { RecordingProvider } from './context/RecordingContext';\nimport { DemoProvider } from './context/DemoContext';\nimport { GlobalModalManager } from './components/GlobalModalManager';\nimport SuccessMessageManager from './components/SuccessMessageManager';\nimport { ErrorBoundary } from './components/ErrorBoundary';\nimport { router } from './routes';\nimport React from 'react';\n\nfunction App() {\n  // Lazy load analytics service after app is mounted\n  React.useEffect(() => {\n    const loadAnalytics = async () => {\n      const { EnhancedAnalyticsService } = await import('./services/enhancedAnalyticsService');\n      EnhancedAnalyticsService.getInstance();\n    };\n    \n    // Load analytics after a short delay to prioritize app rendering\n    const timer = setTimeout(loadAnalytics, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n  \n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <DemoProvider>\n          <AudioProvider>\n            <SidePanelProvider>\n              <RecordingProvider>\n                <RouterProvider router={router} />\n                <GlobalModalManager />\n                <SuccessMessageManager />\n              </RecordingProvider>\n            </SidePanelProvider>\n          </AudioProvider>\n        </DemoProvider>\n      </AuthProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n"],"file":"assets/js/index-a73b4fa8.js"}